---------------------------------------------------------------------------------------
--	File: 	full_db_release_upgrade.sql
--	Author:	GSB
--	Date:	08/23/2007 (Jewel)
--	
--	Purpose: This script will be run to upgrade an existing database to
--		 the next release.  It can only upgrade a database from one release to the
--		 next and cannot do multiple releases.
--
--
--  SWP-790 -  Box Scan screens still say New Box Scan                                - 09/10/07
--  SWP-802 -  Implementing a new transaction to view parsed GBOSS data               - 09/13/07
--  SWP-807 -  PDC_LOOKUP cleanup                                                     - 09/18/07
--  SWP-819 -  Removing obsolete privileges and table from BIGR(Also called SWP-822)  - 12/11/07
--  SWP-884 -  new BIGR menu item for the new DET Viewer                              - 02/29/08
--  SWP-900 -  AUTOMATIC SYNCHRONIZATION OF ORACLE TEXT INDEX IN 10G                  - 04/03/08
--  SWP-905 -  Remove BULK_STAGE table                                                - 04/05/08
--  SWP-906 -  Adjust privileges assigned to BIGR schema                              - 04/05/08
--  SWP-907 -  Remove segments from USERS tablespace                                  - 04/05/08
--             SQL statements for Jewel upgrade                                       - 07/01/08
--  
--  
--
-----------------------------------------------------------------------------------------------------------------
--
-----------------------------------------------------------------------------------------------------------------
-- SQLPlus setup
--
set linesize 200 echo off feedback on verify on 
-- Some DML uses an ampersand so lose the define
SET DEFINE OFF
spool full_db_release_upgrade.log
--
-----------------------------------------------------------------------------------------------------------------
--  DDL
-----------------------------------------------------------------------------------------------------------------
prompt ==========   SWP-900  ========== 
prompt 
prompt drop INDEX PDC_ARDAIS_DONOR_IN1
drop INDEX PDC_ARDAIS_DONOR_IN1
/
prompt create index PDC_ARDAIS_DONOR_IN1 sync (on commit)
CREATE INDEX PDC_ARDAIS_DONOR_IN1 ON PDC_ARDAIS_DONOR (DONOR_PROFILE_NOTES) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS('storage ddc_intermedia memory 2M sync (on commit)')
/

prompt drop INDEX LIMS_PATH_EVALUATION_IN6
drop INDEX LIMS_PATH_EVALUATION_IN6
/
prompt create index LIMS_PATH_EVALUATION_IN6 sync (on commit)
CREATE INDEX LIMS_PATH_EVALUATION_IN6 ON LIMS_PATHOLOGY_EVALUATION (EXTERNAL_COMMENTS) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS('storage lims_intermedia memory 2M sync (on commit)')
/

prompt drop INDEX PDC_PATHOLOGY_REPORT_IN2
drop INDEX PDC_PATHOLOGY_REPORT_IN2
/
prompt create index PDC_PATHOLOGY_REPORT_IN2 sync (on commit)
CREATE INDEX PDC_PATHOLOGY_REPORT_IN2 ON PDC_PATHOLOGY_REPORT (ADDITIONAL_NOTE) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS('storage ddc_intermedia memory 2M sync (on commit)')
/

prompt drop INDEX PDC_PATHOLOGY_REPORT_IN4
drop INDEX PDC_PATHOLOGY_REPORT_IN4
/
prompt create index PDC_PATHOLOGY_REPORT_IN4 sync (on commit)
CREATE INDEX PDC_PATHOLOGY_REPORT_IN4 ON PDC_PATHOLOGY_REPORT (PATHOLOGY_ASCII_REPORT) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS('storage ddc_intermedia memory 2M sync (on commit)')
/

prompt drop INDEX PDC_PATH_REP_SECTION_IN3
drop INDEX PDC_PATH_REP_SECTION_IN3
/
prompt create index PDC_PATH_REP_SECTION_IN3 sync (on commit)
CREATE INDEX PDC_PATH_REP_SECTION_IN3 ON PDC_PATH_REPORT_SECTION (PATH_SECTION_NOTES) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS('storage ddc_intermedia memory 2M sync (on commit)')
/


prompt ==========   END SWP-900 ========== 
prompt 

-----------------------------------------------------------------------------------------------------------------
--  DML
-----------------------------------------------------------------------------------------------------------------
prompt ==========   SWP-790  ========== 
prompt 
prompt Box Scan screens still say New Box Scan

update ard_objects set url = '/iltds/Dispatch?op=BoxScan&title=Box%20Scan', 
object_description = 'Box Scan' 
where object_id='10_ILTDS_045_NBOXSCAN'
/
prompt ==========   END SWP-790 ========== 
prompt 

prompt ==========   SWP-802  ========== 
prompt 
prompt transaction to view parsed GBOSS data

INSERT INTO ARD_OBJECTS (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
VALUES ('40_ORM_070_VIEWGBOSS', 'View GBOSS Data', sysdate, 'JEsielionis', sysdate, 'JEsielionis', 'ORM', '/orm/gboss/viewGboss.do', 'BIGR Administration', 'SUB_MENU', 'M', '40_ORM_070_VIEWGBOSS');

prompt ==========   END SWP-802 ========== 
prompt 

prompt ==========   SWP-807  ========== 
prompt 
prompt PDC_LOOKUP cleanup

--delete history records related to sample properties
delete from iltds_btx_involved_object where btx_id in (select btx_id from iltds_btx_history where btx_type like '%SampleProps');
delete from iltds_btx_involved_location where btx_id in (select btx_id from iltds_btx_history where btx_type like '%SampleProps');
delete from iltds_btx_history where btx_type like '%SampleProps';

--drop db objects related to properties
drop table iltds_sample_properties;
drop sequence iltds_sample_properties_seq;
alter table iltds_sample drop column properties;

--delete OCE records related to PDC_DONOR_DX
delete from ard_other_code_edits where table_name = 'PDC_DONOR_DX';

--drop db objects related to PDC_DONOR_DX
drop table PDC_DONOR_DX;
drop sequence PDC_DIAGNOSIS_LINE_ID_SEQ;

--update history records that have a value for donor educational status
update iltds_btx_history set attrib_9 = null where attrib_9 is not null
and btx_type in ('CreateDonor', 'UpdateDonor');

--drop the educational status column
alter table pdc_ardais_donor drop column educational_status;

prompt ==========   END SWP-807 ==========

prompt ==========   SWP-819  ========== 
prompt 
prompt Removing obsolete privileges and table from BIGR

--Remove obsolete privileges
delete from ard_user_access_module where object_id = '30_ORM_020_DISPGRAPH';

delete from ard_user_access_module where object_id = '30_ORM_030_DISPCLASS';

delete from ard_objects where object_id = '30_ORM_020_DISPGRAPH';

delete from ard_objects where object_id = '30_ORM_030_DISPCLASS';

--Remove obsolete table
drop table ard_concept_graph;

DROP SEQUENCE ARD_CONCEPT_GRAPH_SEQ;


--Update all foreign key constraints referencing pdc_dx_tc_hierarchy to 
--instead reference pdc_lookup (19 such constraints)

ALTER TABLE ILTDS_ASM drop constraint FK_ASM_TO_DX_TC_ORGAN_SITE;

ALTER TABLE ILTDS_ASM ADD
(
  CONSTRAINT FK_ASM_TO_DX_TC_ORGAN_SITE
  FOREIGN KEY
  (
    ORGAN_SITE_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE ILTDS_INFORMED_CONSENT drop constraint FK_INF_CONS_TO_DX_TC_BEST_DX;

ALTER TABLE ILTDS_INFORMED_CONSENT ADD
(
  CONSTRAINT FK_INF_CONS_TO_DX_TC_BEST_DX
  FOREIGN KEY
  (
    BEST_DIAGNOSIS_CUI
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE ILTDS_INFORMED_CONSENT drop constraint FK_INF_CONS_TO_DX_TC_DISEASE;

ALTER TABLE ILTDS_INFORMED_CONSENT ADD
(
  CONSTRAINT FK_INF_CONS_TO_DX_TC_DISEASE
  FOREIGN KEY
  (
    DISEASE_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE ILTDS_SAMPLE drop constraint FK_SAMPLE_TISS_FIND_TO_DX_TC;

ALTER TABLE ILTDS_SAMPLE ADD
(
  CONSTRAINT FK_SAMPLE_TISS_FIND_TO_DX_TC
  FOREIGN KEY
  (
    TISSUE_FINDING_CUI
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE ILTDS_SAMPLE drop constraint FK_SAMPLE_TISS_ORIG_TO_DX_TC;

ALTER TABLE ILTDS_SAMPLE ADD
(
  CONSTRAINT FK_SAMPLE_TISS_ORIG_TO_DX_TC
  FOREIGN KEY
  (
    TISSUE_ORIGIN_CUI
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE ILTDS_SAMPLE drop constraint FK_SAMPLE_TO_DX_TC_BEST_DX;

ALTER TABLE ILTDS_SAMPLE ADD
(
  CONSTRAINT FK_SAMPLE_TO_DX_TC_BEST_DX
  FOREIGN KEY
  (
    DIAGNOSIS_CUI_BEST
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE LIMS_PATHOLOGY_EVALUATION drop constraint FK_PATH_EVAL_TO_DX_TC_DIAG;

ALTER TABLE LIMS_PATHOLOGY_EVALUATION ADD
(
  CONSTRAINT FK_PATH_EVAL_TO_DX_TC_DIAG
  FOREIGN KEY
  (
    DIAGNOSIS_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE LIMS_PATHOLOGY_EVALUATION drop constraint FK_PATH_EVAL_TO_DX_TC_TFIND;

ALTER TABLE LIMS_PATHOLOGY_EVALUATION ADD
(
  CONSTRAINT FK_PATH_EVAL_TO_DX_TC_TFIND
  FOREIGN KEY
  (
    TISSUE_FINDING_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE LIMS_PATHOLOGY_EVALUATION drop constraint FK_PATH_EVAL_TO_DX_TC_TORIG;

ALTER TABLE LIMS_PATHOLOGY_EVALUATION ADD
(
  CONSTRAINT FK_PATH_EVAL_TO_DX_TC_TORIG
  FOREIGN KEY
  (
    TISSUE_ORIGIN_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATHOLOGY_REPORT drop constraint FK_REPORT_DIAGNOSIS_TO_DX_TC;

ALTER TABLE PDC_PATHOLOGY_REPORT ADD
(
  CONSTRAINT FK_REPORT_DIAGNOSIS_TO_DX_TC
  FOREIGN KEY
  (
    DIAGNOSIS_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATHOLOGY_REPORT drop constraint FK_REPORT_PROCEDURE_TO_DX_TC;

ALTER TABLE PDC_PATHOLOGY_REPORT ADD
(
  CONSTRAINT FK_REPORT_PROCEDURE_TO_DX_TC
  FOREIGN KEY
  (
    PROCEDURE_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATHOLOGY_REPORT drop constraint FK_REPORT_TISSUE_TO_DX_TC;

ALTER TABLE PDC_PATHOLOGY_REPORT ADD
(
  CONSTRAINT FK_REPORT_TISSUE_TO_DX_TC
  FOREIGN KEY
  (
    TISSUE_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATH_REPORT_DX drop constraint FK_DX_TC_HRCHY_PATH_REP_DX;

ALTER TABLE PDC_PATH_REPORT_DX ADD
(
  CONSTRAINT FK_DX_TC_HRCHY_PATH_REP_DX
  FOREIGN KEY
  (
    PATH_TC_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATH_REPORT_DX drop constraint FK_DX_TC_HRCHY_PATH_REP_DX2;

ALTER TABLE PDC_PATH_REPORT_DX ADD
(
  CONSTRAINT FK_DX_TC_HRCHY_PATH_REP_DX2
  FOREIGN KEY
  (
    PATH_DX_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATH_REPORT_SECTION drop constraint FK_SECTION_DCID_TO_DX_TC;

ALTER TABLE PDC_PATH_REPORT_SECTION ADD
(
  CONSTRAINT FK_SECTION_DCID_TO_DX_TC
  FOREIGN KEY
  (
    DIAGNOSIS_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATH_REPORT_SECTION drop constraint FK_SECTION_TFCID_TO_DX_TC;

ALTER TABLE PDC_PATH_REPORT_SECTION ADD
(
  CONSTRAINT FK_SECTION_TFCID_TO_DX_TC
  FOREIGN KEY
  (
    TISSUE_FINDING_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE PDC_PATH_REPORT_SECTION drop constraint FK_SECTION_TOCID_TO_DX_TC;

ALTER TABLE PDC_PATH_REPORT_SECTION ADD
(
  CONSTRAINT FK_SECTION_TOCID_TO_DX_TC
  FOREIGN KEY
  (
    TISSUE_ORIGIN_CONCEPT_ID
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE RNA_BATCH_DETAIL drop constraint FK_RNA_BATCH_TO_DX_DISEASE;

ALTER TABLE RNA_BATCH_DETAIL ADD
(
  CONSTRAINT FK_RNA_BATCH_TO_DX_DISEASE
  FOREIGN KEY
  (
    DISEASE
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

ALTER TABLE RNA_BATCH_DETAIL drop constraint FK_RNA_BATCH_TO_DX_TISSUETYPE;

ALTER TABLE RNA_BATCH_DETAIL ADD
(
  CONSTRAINT FK_RNA_BATCH_TO_DX_TISSUETYPE
  FOREIGN KEY
  (
    TISSUETYPE_CODE
  )
  REFERENCES PDC_LOOKUP
  ( 
    LOOKUP_TYPE_CD
  )
  NOT DEFERRABLE INITIALLY IMMEDIATE
  ENABLE
);

prompt ==========   END SWP-819 ========== 
prompt 

prompt ==========   SWP-884  ========== 
prompt 
prompt add a new BIGR menu 
INSERT INTO ARD_OBJECTS (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID) VALUES ('30_ORM_050_DETVIEWER', 'DET Viewer', sysdate, 'mcacciapouti', sysdate, 'mcacciapouti', 'ORM', '/orm/informatics/detViewer.do', 'Informatics', 'SUB_MENU', 'M', '30_ORM_050_DETVIEWER')
/
prompt ==========   END SWP-884 ========== 
prompt 

prompt ==========   SWP-905  ========== 
prompt 
prompt Remove BULK_STAGE table 
DROP TABLE BULK_STAGE CASCADE CONSTRAINTS
/
DROP PROCEDURE BULK_OCE_UPDATE
/
prompt ==========   END SWP-905 ========== 
prompt 

prompt ==========   SQL for Jewel ========== 
prompt 
prompt SQL statements for Jewel upgrade
prompt  
prompt Cancer location changed from 1 to N, so drop the columns that
-- hold the singlevalued data element.
--
ALTER TABLE CIR_CANCER_HX_ADE DROP COLUMN CANCER_LOCATION_CUI
ALTER TABLE CIR_CANCER_HX_ADE DROP COLUMN OTHER_CANCER_LOCATION

prompt Add the DATA_VALUE_TEXT column to all EAV tables to support the text datatype.
--
ALTER TABLE CIR_ANCILLARY_STUDIES_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_BLOO_GASE_ARTE_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_CHEMISTRY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_CHEMISTRY_SURVEY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_CHROMOSOME_STUDIES_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_CLIN_DIS_PROG_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_COAGULATION_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_CYTOLOGY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_HEMATOLOGY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_HEMATOLOGY_SURVEY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_HISTOCHEMISTRY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_IMAGING_STUDIES_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_IMMUNOHISTOCHEMISTRY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_IMMUNOPHENOTYPE_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_MICROBIOLOGY_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_SKIN_TESTS_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_STAINS_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_SURGICAL_STUDIES_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));
ALTER TABLE CIR_URINALYSIS_EAV ADD (DATA_VALUE_TEXT VARCHAR2(4000));

prompt Add the OTHER_DATA_VALUE column to all MULTI tables that do not have it.
-- Prior to the JEWEL release we only added OTHER_DATA_VALUE column if it was 
-- truly needed (i.e. if there were any multivalued elements with other in 
-- the database category), but to simplify the code we always add it to all 
-- MULTI tables as of JEWEL.
--
ALTER TABLE CIR_CANCER_HX_ADE_MULTI ADD (OTHER_DATA_VALUE VARCHAR2(200));
ALTER TABLE CIR_DIABETES_HX_ADE_MULTI ADD (OTHER_DATA_VALUE VARCHAR2(200));
ALTER TABLE CIR_RECUR_ADE_MULTI ADD (OTHER_DATA_VALUE VARCHAR2(200));

prompt Drop the PARENT_ID column from all EAV, NOTE and data element MULTI tables.
-- Prior to the JEWEL release the PARENT_ID was a foreign key to the base
-- table for each database category, but since we do all querying in the 
-- application via the FORM_ID column (and since we dropped base tables that
-- were not used in JEWEL - below), we can drop the unused PARENT_ID column.
--
ALTER TABLE CIR_ANCILLARY_STUDIES_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_ANCILLARY_STUDIES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_BLANK_FIELDS_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_BLOO_GASE_ARTE_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_BLOO_GASE_ARTE_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CASE_INFO_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CASE_INFO_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHEMISTRY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHEMISTRY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHEMISTRY_SURVEY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHEMISTRY_SURVEY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHROMOSOME_STUDIES_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHROMOSOME_STUDIES_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CHROMOSOME_STUDIES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CLIN_DIS_PROG_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CLIN_DIS_PROG_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CLIN_DIS_PROG_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CLIN_PRES_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CLIN_PRES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_COAGULATION_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_COAGULATION_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CYTOLOGY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_CYTOLOGY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_FOLLOWUP_INFO_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_GENE_STUDIES_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_GENE_STUDIES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HEMATOLOGY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HEMATOLOGY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HEMATOLOGY_SURVEY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HEMATOLOGY_SURVEY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMAGING_STUDIES_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMAGING_STUDIES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMMUNOHISTOCHEMISTRY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HISTOCHEMISTRY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HISTOCHEMISTRY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HOSPITALIZATION_INFO_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_HOSPITALIZATION_INFO_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMMUNOHISTOCHEMISTRY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMMUNOPHENOTYPE_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_IMMUNOPHENOTYPE_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_MICROBIOLOGY_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_MICROBIOLOGY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PAST_MEDI_HIST_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PAST_MEDI_HIST_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PATH_VERIFICATION_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PATH_VERIFICATION_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PROBLEM_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_PT_INFO_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SKIN_TESTS_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SKIN_TESTS_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SURGICAL_STUDIES_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SURGICAL_STUDIES_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_STAINS_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_STAINS_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SURGICAL_PATHOLOGY_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_SURGICAL_PATHOLOGY_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_TREATMENT_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_TREATMENT_NOTE DROP COLUMN PARENT_ID;
ALTER TABLE CIR_URINALYSIS_EAV DROP COLUMN PARENT_ID;
ALTER TABLE CIR_URINALYSIS_MULTI DROP COLUMN PARENT_ID;
ALTER TABLE CIR_URINALYSIS_NOTE DROP COLUMN PARENT_ID;

prompt Drop "base" tables that are not needed.  These tables correspond to
-- database categories that are either EAV or that only have multivalued
-- data elements, and thus the base table does not hold any eral data.  
-- Therefore we decided in the JEWEL release to drop the existing unused
-- base tables and not generate them any more going forward.
--
DROP TABLE CIR_ANCILLARY_STUDIES;
DROP TABLE CIR_BLOO_GASE_ARTE;
DROP TABLE CIR_CHEMISTRY;
DROP TABLE CIR_CHEMISTRY_SURVEY;
DROP TABLE CIR_CHROMOSOME_STUDIES;
DROP TABLE CIR_CLIN_DIS_PROG;
DROP TABLE CIR_COAGULATION;
DROP TABLE CIR_CYTOLOGY;
DROP TABLE CIR_GENE_STUDIES_EAV;
DROP TABLE CIR_GENE_STUDIES;
DROP TABLE CIR_HEMATOLOGY;
DROP TABLE CIR_HEMATOLOGY_SURVEY;
DROP TABLE CIR_HISTOCHEMISTRY;
DROP TABLE CIR_IMAGING_STUDIES;
DROP TABLE CIR_IMMUNOHISTOCHEMISTRY_MULTI;
DROP TABLE CIR_IMMUNOHISTOCHEMISTRY;
DROP TABLE CIR_IMMUNOPHENOTYPE;
DROP TABLE CIR_MICROBIOLOGY;
DROP TABLE CIR_SKIN_TESTS;
DROP TABLE CIR_STAINS;
DROP TABLE CIR_SURGICAL_STUDIES;
DROP TABLE CIR_URINALYSIS;

prompt Update the NOTE column of all note tables from 1000 to 4000.
--
ALTER TABLE CIR_ANCILLARY_STUDIES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_BLANK_FIELDS_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_BLOO_GASE_ARTE_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CASE_INFO_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CHEMISTRY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CHEMISTRY_SURVEY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CHROMOSOME_STUDIES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CLIN_DIS_PROG_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CLIN_PRES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_COAGULATION_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_CYTOLOGY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_FOLLOWUP_INFO_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_GENE_STUDIES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_HEMATOLOGY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_HEMATOLOGY_SURVEY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_HISTOCHEMISTRY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_HOSPITALIZATION_INFO_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_IMAGING_STUDIES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_IMMUNOHISTOCHEMISTRY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_IMMUNOPHENOTYPE_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_MICROBIOLOGY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_PAST_MEDI_HIST_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_PATH_VERIFICATION_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_PROBLEM_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_PT_INFO_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_SKIN_TESTS_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_STAINS_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_SURGICAL_PATHOLOGY_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_SURGICAL_STUDIES_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_TREATMENT_NOTE MODIFY NOTE VARCHAR2(4000);
ALTER TABLE CIR_URINALYSIS_NOTE MODIFY NOTE VARCHAR2(4000);

prompt ==========   END SQL for Jewel ========== 
prompt 

prompt ==========   SWP-907  ========== 
prompt 
prompt Remove segments from USERS tablespace 
ALTER INDEX ILTDS_ASSIGNED_SAMPLE_IDS_IN1 
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX ILTDS_ASSIGNED_SAMPLE_IDS_IN2
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX ILTDS_ASSIGNED_SAMPLE_IDS_IN3
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX PK_ILTDS_REQUEST
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX PK_ILTDS_REQUEST_BOX
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX PK_ILTDS_REQUEST_ITEM
REBUILD TABLESPACE ILTDS_IDX_TBS
/
ALTER INDEX PRIV_ID_UNIQUE
REBUILD TABLESPACE OTHER_IDX_TBS
/
prompt ==========   END SWP-907 ========== 
prompt 

commit
/

set define on
prompt ==========   SWP-906  ========== 
prompt
prompt Adjust privileges assigned to BIGR schema 
set feedback off
--- Define variable ---
column tuser new_value theuser noprint
--- Load the variable with the current user prefix ---
SELECT rtrim(sys_context('USERENV', 'SESSION_USER'), '_OWNER') tuser FROM dual;

prompt Log in as SYSTEM to complete the upgrade
prompt
connect system
prompt


REVOKE "CONNECT" FROM &&theuser._UTIL;
REVOKE "RESOURCE" FROM &&theuser._UTIL;
ALTER USER &&theuser._UTIL DEFAULT ROLE NONE;

REVOKE "CONNECT" FROM &&theuser._DERIV;
REVOKE "RESOURCE" FROM &&theuser._DERIV;
ALTER USER &&theuser._DERIV DEFAULT ROLE NONE;

REVOKE "CONNECT" FROM &&theuser._READER;
REVOKE "RESOURCE" FROM &&theuser._READER;
ALTER USER &&theuser._READER DEFAULT ROLE NONE;

REVOKE "CONNECT" FROM &&theuser._USER;
REVOKE "RESOURCE" FROM &&theuser._USER;
ALTER USER &&theuser._USER DEFAULT ROLE NONE;


GRANT CREATE SESSION TO &&theuser._UTIL
/
GRANT UNLIMITED TABLESPACE TO &&theuser._UTIL
/


GRANT CREATE SESSION TO &&theuser._DERIV
/
GRANT UNLIMITED TABLESPACE TO &&theuser._DERIV
/


GRANT CREATE SESSION TO &&theuser._READER
/
GRANT UNLIMITED TABLESPACE TO &&theuser._READER
/


GRANT CREATE SESSION TO &&theuser._USER
/
GRANT UNLIMITED TABLESPACE TO &&theuser._USER
/


REVOKE "CONNECT" FROM &&theuser._ADS_USER;
REVOKE "RESOURCE" FROM &&theuser._ADS_USER;
ALTER USER &&theuser._ADS_USER DEFAULT ROLE NONE;

REVOKE ALTER ANY MATERIALIZED VIEW FROM &&theuser._ADS_USER
/
REVOKE ALTER SESSION FROM &&theuser._ADS_USER
/
REVOKE CREATE ANY MATERIALIZED VIEW FROM &&theuser._ADS_USER
/
REVOKE RESTRICTED SESSION FROM &&theuser._ADS_USER
/
GRANT CREATE CLUSTER TO &&theuser._ADS_USER
/
GRANT CREATE DATABASE LINK TO &&theuser._ADS_USER
/
GRANT CREATE PROCEDURE TO &&theuser._ADS_USER
/
GRANT CREATE SEQUENCE TO &&theuser._ADS_USER
/
GRANT CREATE SESSION TO &&theuser._ADS_USER
/
GRANT CREATE SYNONYM TO &&theuser._ADS_USER
/
GRANT CREATE TABLE TO &&theuser._ADS_USER
/
GRANT CREATE TRIGGER TO &&theuser._ADS_USER
/
GRANT CREATE TYPE TO &&theuser._ADS_USER
/
GRANT CREATE VIEW TO &&theuser._ADS_USER
/
GRANT UNLIMITED TABLESPACE TO &&theuser._ADS_USER
/

REVOKE "CONNECT" FROM &&theuser._OWNER;
REVOKE "RESOURCE" FROM &&theuser._OWNER;
ALTER USER &&theuser._OWNER DEFAULT ROLE NONE;

REVOKE ALTER ANY MATERIALIZED VIEW FROM &&theuser._OWNER
/
REVOKE ALTER ROLLBACK SEGMENT FROM &&theuser._OWNER
/
REVOKE ALTER SESSION FROM &&theuser._OWNER
/
REVOKE CREATE ANY DIRECTORY FROM &&theuser._OWNER
/
REVOKE CREATE ANY MATERIALIZED VIEW FROM &&theuser._OWNER
/
REVOKE DROP ANY DIRECTORY FROM &&theuser._OWNER
/
REVOKE RESTRICTED SESSION FROM &&theuser._OWNER
/
REVOKE SELECT ANY DICTIONARY FROM &&theuser._OWNER
/
REVOKE DROP PUBLIC SYNONYM FROM &&theuser._OWNER
/
REVOKE CREATE PUBLIC SYNONYM FROM &&theuser._OWNER
/
GRANT CREATE CLUSTER TO &&theuser._OWNER
/
GRANT CREATE DATABASE LINK TO &&theuser._OWNER
/
GRANT CREATE PROCEDURE TO &&theuser._OWNER
/
GRANT CREATE SEQUENCE TO &&theuser._OWNER
/
GRANT CREATE SESSION TO &&theuser._OWNER
/
GRANT CREATE ANY SYNONYM TO &&theuser._OWNER
/
GRANT DROP ANY SYNONYM TO &&theuser._OWNER
/
GRANT CREATE TABLE TO &&theuser._OWNER
/
GRANT CREATE TRIGGER TO &&theuser._OWNER
/
GRANT CREATE TYPE TO &&theuser._OWNER
/
GRANT CREATE VIEW TO &&theuser._OWNER
/
GRANT UNLIMITED TABLESPACE TO &&theuser._OWNER
/
GRANT "CTXAPP" TO &&theuser._OWNER
/

prompt ==========   END SWP-906 ========== 
prompt 

commit
/

prompt ==========   Complete SWP-900  ========== 
prompt 

SET SERVEROUTPUT ON verify off newpage none

DECLARE 
  CURSOR c1 IS 
    SELECT job FROM dba_jobs where log_user = '&&theuser._OWNER'; 
BEGIN 
  IF 1 = 1 THEN 
   dbms_output.put_line(''); 
   dbms_output.put_line('====================================================================='); 
   DBMS_OUTPUT.PUT_LINE('Execute the following code as CTXSYS to remove the &&theuser._OWNER dbms jobs');
   dbms_output.put_line(''); 
   DBMS_OUTPUT.PUT_LINE('--- Code snippet Begin ---');
   FOR RecordIndex IN c1 
    LOOP 
     DBMS_OUTPUT.PUT_LINE('exec dbms_job.remove('||RecordIndex.job||')'); 
    END LOOP; 
   dbms_output.put_line(''); 
  ELSE 
     dbms_output.put_line(''); 
     DBMS_OUTPUT.PUT_LINE('Operation Canceled.'); 
     dbms_output.put_line(''); 
  END IF; 
  DBMS_OUTPUT.PUT_LINE('commit;');
  DBMS_OUTPUT.PUT_LINE('--- Code snippet End ---');
  dbms_output.put_line(''); 
   DBMS_OUTPUT.PUT_LINE('You MUST commit; in this session.'); 
   dbms_output.put_line(''); 

EXCEPTION 
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('SQLERRM: ' || SQLERRM); 
END; 
/ 
prompt
prompt Log in as CTXSYS to complete SWP-900
prompt
SET SERVEROUTPUT ON verify on feedback on newpage none
connect ctxsys
prompt
show user
prompt Now run the dbms_job.remove snippets and COMMIT!
prompt 


-- ==========   RUN FINISH SCRIPTS   ========== 

-- @Application_grants.sql ARDAIS_OWNER/ARDAIS_OWNER GENPROD1 ardais_

-- @create_new_priv_syns.sql ARDAIS_OWNER/ARDAIS_OWNER GENPROD1 ardais_

-- Prompt Note
-- prompt compile all triggers if needed
-----------------------------------------------------------------------------------------------------------------
-- SQLPlus finish
--
-- Compile Schema                                                                  
-- BEGIN
--  DBMS_UTILITY.COMPILE_SCHEMA (USER);
-- END;
-- /

spool off
-----------------------------------------------------------------------