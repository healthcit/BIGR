---------------------------------------------------------------------------------------
--	   File: full_db_release_upgrade.sql
--	 Author: HCIT
--      Release: 5.9
--	   Date: 5/26/11
--	
--	Purpose: This script will be run to upgrade an existing database to
--		 the next release.  It can only upgrade a database from one release to the
--		 next and cannot do multiple releases.
--
--	add attachments table		5/26/11
--
-----------------------------------------------------------------------------------------------------------------
--
-----------------------------------------------------------------------------------------------------------------
-- SQLPlus setup
--
set linesize 200 echo off feedback on verify on echo off
spool full_db_release_upgrade.log
--
-----------------------------------------------------------------------------------------------------------------
--  DDL
-----------------------------------------------------------------------------------------------------------------
CREATE TABLE SHARED_VIEWS
(
  ID NUMBER NOT NULL,
  FORM_DEFINITION_ID VARCHAR2 (10) NOT NULL,
  ROLE_ID VARCHAR2 (10) NOT NULL,
  SHARED_TYPE VARCHAR2 (50) NULL
)
TABLESPACE OTHER_TBL_TBS
NOCACHE
NOPARALLEL
LOGGING
/

CREATE SEQUENCE SHARED_VIEWS_SEQ
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 1E27
  MINVALUE 1
  CACHE 20
  NOCYCLE
  NOORDER
/

CREATE INDEX SHARED_VIEWS_IN1
ON SHARED_VIEWS
(
  FORM_DEFINITION_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX SHARED_VIEWS_IN2
ON SHARED_VIEWS
(
  ROLE_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE OR REPLACE TRIGGER SHARED_VIEWS_PK_TRG BEFORE
  INSERT ON SHARED_VIEWS REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW DECLARE seq_val NUMBER;
  BEGIN
    IF :new.id IS NULL THEN
      SELECT SHARED_VIEWS_SEQ.nextval INTO seq_val FROM dual;
      :new.id := seq_val;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error(-20001, 'Primary key violation on ILTDS_ATTACHMENTS: '||SQLERRM);
  END SHARED_VIEWS_PK_TRG;
  /
  ALTER TRIGGER SHARED_VIEWS_PK_TRG ENABLE;

GRANT ALL PRIVILEGES ON SHARED_VIEWS TO public ;

create public synonym SHARED_VIEWS for SHARED_VIEWS;

INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('40_ORM_SHARE_VIEW', 'View Admin', TO_DATE('08/28/2012 14:18:00', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('08/28/2012 14:18:01', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'ORM', null, null, null, 'P', '40_ORM_SHARE_VIEW');

INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('40_ORM_20_SAMPLEVIEW', 'Sample View', TO_DATE('09/06/2012 12:04:00', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('09/06/2012 12:04:01', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'ORM', null, null, null, 'P', '40_ORM_20_SAMPLEVIEW');

INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('40_ORM_20_DONORVIEW', 'Donor View', TO_DATE('09/06/2012 12:04:00', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('09/06/2012 12:04:01', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'ORM', null, null, null, 'P', '40_ORM_20_DONORVIEW');

INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('40_ORM_20_CASEVIEW', 'Case View', TO_DATE('09/06/2012 12:04:00', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('09/06/2012 12:04:01', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'ORM', null, null, null, 'P', '40_ORM_20_CASEVIEW');

INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('40_ORM_20_VIEWMNG', 'Manage View', TO_DATE('09/06/2012 12:04:00', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('09/06/2012 12:04:01', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'ORM', null, null, null, 'P', '40_ORM_20_VIEWMNG');

------------------------------
------ PERSONAL FILTERS ------
------------------------------
CREATE TABLE PERSONAL_FILTERS
(
  ID NUMBER NOT NULL,
  ARDAIS_ACCT_KEY VARCHAR2 (10) NOT NULL,
  ARDAIS_USER_ID VARCHAR2 (12) NOT NULL,
  TYPE VARCHAR2 (50) NULL,
  NAME VARCHAR2 (100) NULL,
  VALUE CLOB NULL
)
TABLESPACE OTHER_TBL_TBS
NOCACHE
NOPARALLEL
LOGGING
/

CREATE SEQUENCE PERSONAL_FILTERS_SEQ
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 1E27
  MINVALUE 1
  CACHE 20
  NOCYCLE
  NOORDER
/

CREATE INDEX PERSONAL_FILTERS_IN1
ON PERSONAL_FILTERS
(
  ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX PERSONAL_FILTERS_IN2
ON PERSONAL_FILTERS
(
  ARDAIS_ACCT_KEY
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX PERSONAL_FILTERS_IN3
ON PERSONAL_FILTERS
(
  ARDAIS_USER_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE OR REPLACE TRIGGER PERSONAL_FILTERS_PK_TRG BEFORE
  INSERT ON PERSONAL_FILTERS REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW DECLARE seq_val NUMBER;
  BEGIN
    IF :new.id IS NULL THEN
      SELECT PERSONAL_FILTERS_SEQ.nextval INTO seq_val FROM dual;
      :new.id := seq_val;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error(-20001, 'Primary key violation on ILTDS_ATTACHMENTS: '||SQLERRM);
  END PERSONAL_FILTERS_PK_TRG;
  /

ALTER TRIGGER PERSONAL_FILTERS_PK_TRG ENABLE;

GRANT ALL PRIVILEGES ON PERSONAL_FILTERS TO public ;

create public synonym PERSONAL_FILTERS for PERSONAL_FILTERS;

---------------------------
------ APERIO IMAGES ------
---------------------------
CREATE TABLE APERIOIMAGE_BIGRSAMPLE
(
  ID NUMBER NOT NULL,
  APERIO_IMAGE_ID VARCHAR2 (100) NOT NULL,
  BIGR_SAMPLE_ID VARCHAR2 (100) NOT NULL
)
TABLESPACE OTHER_TBL_TBS
NOCACHE
NOPARALLEL
LOGGING
/

CREATE SEQUENCE APERIOIMAGE_BIGRSAMPLE_SEQ
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 1E27
  MINVALUE 1
  CACHE 20
  NOCYCLE
  NOORDER
/

CREATE INDEX APERIOIMAGE_BIGRSAMPLE_IN1
ON APERIOIMAGE_BIGRSAMPLE
(
  ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX APERIOIMAGE_BIGRSAMPLE_IN2
ON APERIOIMAGE_BIGRSAMPLE
(
  APERIO_IMAGE_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX APERIOIMAGE_BIGRSAMPLE_IN3
ON APERIOIMAGE_BIGRSAMPLE
(
  BIGR_SAMPLE_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE OR REPLACE TRIGGER APERIOIMAGE_BIGRSAMPLE_PK_TRG BEFORE
  INSERT ON APERIOIMAGE_BIGRSAMPLE REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW DECLARE seq_val NUMBER;
  BEGIN
    IF :new.id IS NULL THEN
      SELECT APERIOIMAGE_BIGRSAMPLE_SEQ.nextval INTO seq_val FROM dual;
      :new.id := seq_val;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error(-20001, 'Primary key violation on ILTDS_ATTACHMENTS: '||SQLERRM);
  END APERIOIMAGE_BIGRSAMPLE_PK_TRG;
  /

ALTER TRIGGER APERIOIMAGE_BIGRSAMPLE_PK_TRG ENABLE;

GRANT ALL PRIVILEGES ON APERIOIMAGE_BIGRSAMPLE TO public;

create public synonym APERIOIMAGE_BIGRSAMPLE for APERIOIMAGE_BIGRSAMPLE;

-- STORAGE REPORT
INSERT INTO ARD_OBJECTS
   (OBJECT_ID, OBJECT_DESCRIPTION, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY, LONG_DESCRIPTION, URL, TOP_MENU, SUB_MENU, OBJECT_TYPE, PRIVILEGE_ID)
 VALUES ('85_REPORT_01_STORAGE', 'Storage Report', TO_DATE('05/16/2013 12:48:25', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', TO_DATE('05/16/2013 12:48:24', 'MM/DD/YYYY HH24:MI:SS'), 'RBoris', 'Storage Report', '/reports/storageReport.do', 'Reports', 'SUB_MENU', 'M', '85_REPORT_01_STORAGE');

CREATE TABLE DEPENDED_PRIVILEGES
(
  PRIVILEGE_ID VARCHAR2 (100) NOT NULL,
  DEPENDED_PRIVILEGE_ID VARCHAR2 (100) NOT NULL
)
TABLESPACE OTHER_TBL_TBS
NOCACHE
NOPARALLEL
LOGGING
/

CREATE INDEX DEPENDED_PRIVILEGES_IN1
ON DEPENDED_PRIVILEGES
(
  PRIVILEGE_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

CREATE INDEX DEPENDED_PRIVILEGES_IN2
ON DEPENDED_PRIVILEGES
(
  DEPENDED_PRIVILEGE_ID
)
TABLESPACE OTHER_IDX_TBS
LOGGING
/

INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '50_IMP_35_CREATESAMP');
INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '50_IMP_40_MODIFYSAMP');
INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '10_ILTDS_145_ICP');
INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '10_ILTDS_122_SCANSTOR');
INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '10_ILTDS_085_ABOXSCAN');
INSERT INTO DEPENDED_PRIVILEGES(PRIVILEGE_ID, DEPENDED_PRIVILEGE_ID) VALUES ('85_REPORT_01_STORAGE', '10_ILTDS_100_UPDBXLOC');

set feedback on
-----------------------------------------------------------------------------------------------------------------
--  DML
-----------------------------------------------------------------------------------------------------------------
-- Some DML uses an ampersand so lose the define
SET DEFINE OFF
--  prompt ==========   SWP-  ========== 
--  prompt  

--  prompt ==========   END SWP- ========== 
--  prompt 

--  commit
--  /
-- ==========   FINISH SCRIPTS, if needed   ========== 

-----------------------------------------------------------------------------------------------------------------
-- SQLPlus finish
--
-- Compile Schema                                                                  
-- BEGIN
--  DBMS_UTILITY.COMPILE_SCHEMA (USER);
-- END;
-- /

spool off
-----------------------------------------------------------------------
