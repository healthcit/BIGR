// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ardais.bigr.iltds.beans;

import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.Remote;
import java.sql.Timestamp;
import java.util.Hashtable;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteCMPAsmform_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteCMPAsmform target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.ardais.bigr.iltds.beans.Asmform:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.ivj.ejb.runtime.CopyHelper:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteCMPAsmform) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2076203351: 
                    if (method.equals("J_copyFromEJB")) {
                        return J_copyFromEJB(in, reply);
                    }
                case -1754727945: 
                    if (method.equals("_get_surgical_specimen_id")) {
                        return _get_surgical_specimen_id(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1253874883: 
                    if (method.equals("_set_removal_date")) {
                        return _set_removal_date(in, reply);
                    }
                case -1247524614: 
                    if (method.equals("_get_ardais_id")) {
                        return _get_ardais_id(in, reply);
                    }
                case -1130397898: 
                    if (method.equals("privateSetArdaisstaffKey")) {
                        return privateSetArdaisstaffKey(in, reply);
                    }
                case -1036599230: 
                    if (method.equals("_get_procedure_date")) {
                        return _get_procedure_date(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -473393402: 
                    if (method.equals("_set_ardais_id")) {
                        return _set_ardais_id(in, reply);
                    }
                case -452640285: 
                    if (method.equals("_set_link_staff_id")) {
                        return _set_link_staff_id(in, reply);
                    }
                case -369800872: 
                    if (method.equals("setConsent")) {
                        return setConsent(in, reply);
                    }
                case -359294323: 
                    if (method.equals("_get_consentKey")) {
                        return _get_consentKey(in, reply);
                    }
                case -116565578: 
                    if (method.equals("_set_procedure_date")) {
                        return _set_procedure_date(in, reply);
                    }
                case 10711173: 
                    if (method.equals("_set_ardais_staff_id")) {
                        return _set_ardais_staff_id(in, reply);
                    }
                case 176000952: 
                    if (method.equals("J_copyToEJB")) {
                        return J_copyToEJB(in, reply);
                    }
                case 194791112: 
                    if (method.equals("_get_surgical_specimen_id_other")) {
                        return _get_surgical_specimen_id_other(in, reply);
                    }
                case 199640211: 
                    if (method.equals("_set_grossing_date")) {
                        return _set_grossing_date(in, reply);
                    }
                case 330584636: 
                    if (method.equals("_set_surgical_specimen_id_other")) {
                        return _set_surgical_specimen_id_other(in, reply);
                    }
                case 479111199: 
                    if (method.equals("_get_ardaisstaffKey")) {
                        return _get_ardaisstaffKey(in, reply);
                    }
                case 487512535: 
                    if (method.equals("_get_link_staff_id")) {
                        return _get_link_staff_id(in, reply);
                    }
                case 540607593: 
                    if (method.equals("_set_acc_surgical_removal_time")) {
                        return _set_acc_surgical_removal_time(in, reply);
                    }
                case 577567945: 
                    if (method.equals("_get_removal_date")) {
                        return _get_removal_date(in, reply);
                    }
                case 686109841: 
                    if (method.equals("_set_creation_time")) {
                        return _set_creation_time(in, reply);
                    }
                case 769889572: 
                    if (method.equals("privateSetConsentKey")) {
                        return privateSetConsentKey(in, reply);
                    }
                case 813321821: 
                    if (method.equals("_get_acc_surgical_removal_time")) {
                        return _get_acc_surgical_removal_time(in, reply);
                    }
                case 1139793031: 
                    if (method.equals("_get_grossing_date")) {
                        return _get_grossing_date(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1435719148: 
                    if (method.equals("secondarySetConsent")) {
                        return secondarySetConsent(in, reply);
                    }
                case 1554439033: 
                    if (method.equals("_get_ardais_staff_id")) {
                        return _get_ardais_staff_id(in, reply);
                    }
                case 1626262661: 
                    if (method.equals("_get_creation_time")) {
                        return _get_creation_time(in, reply);
                    }
                case 1736158315: 
                    if (method.equals("_set_surgical_specimen_id")) {
                        return _set_surgical_specimen_id(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1988361188: 
                    if (method.equals("getConsent")) {
                        return getConsent(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream J_copyFromEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable result = target._copyFromEJB();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Hashtable.class);
        return out;
    }
    
    private OutputStream J_copyToEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable arg0 = (Hashtable) in.read_value(Hashtable.class);
        target._copyToEJB(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardais_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_ardaisstaffKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArdaisstaffKey result = target.getArdaisstaffKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArdaisstaffKey.class);
        return out;
    }
    
    private OutputStream getConsent(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Consent result;
        try {
            result = target.getConsent();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_consentKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ConsentKey result = target.getConsentKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ConsentKey.class);
        return out;
    }
    
    private OutputStream _get_creation_time(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getCreation_time();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_grossing_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getGrossing_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_link_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getLink_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_removal_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getRemoval_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_surgical_specimen_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSurgical_specimen_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_surgical_specimen_id_other(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSurgical_specimen_id_other();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream privateSetArdaisstaffKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArdaisstaffKey arg0 = (ArdaisstaffKey) in.read_value(ArdaisstaffKey.class);
        target.privateSetArdaisstaffKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_ardais_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_creation_time(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setCreation_time(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_grossing_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setGrossing_date(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_link_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setLink_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_removal_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setRemoval_date(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_surgical_specimen_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSurgical_specimen_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_surgical_specimen_id_other(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSurgical_specimen_id_other(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondarySetConsent(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Consent arg0 = (Consent) in.read_Object(Consent.class);
        target.secondarySetConsent(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream setConsent(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Consent arg0 = (Consent) in.read_Object(Consent.class);
        target.setConsent(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream privateSetConsentKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ConsentKey arg0 = (ConsentKey) in.read_value(ConsentKey.class);
        target.privateSetConsentKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardais_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_ardais_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_acc_surgical_removal_time(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAcc_surgical_removal_time();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_acc_surgical_removal_time(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setAcc_surgical_removal_time(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_procedure_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getProcedure_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _set_procedure_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setProcedure_date(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
}
