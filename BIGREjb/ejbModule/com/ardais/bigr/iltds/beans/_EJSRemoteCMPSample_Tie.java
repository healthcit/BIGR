// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ardais.bigr.iltds.beans;

import java.io.Serializable;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.sql.Timestamp;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteCMPSample_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteCMPSample target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.ardais.bigr.iltds.beans.Sample:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.ivj.ejb.runtime.CopyHelper:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteCMPSample) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2124327700: 
                    if (method.equals("_get_collection_datetime_dpc")) {
                        return _get_collection_datetime_dpc(in, reply);
                    }
                case -2113786916: 
                    if (method.equals("_get_histoNotes")) {
                        return _get_histoNotes(in, reply);
                    }
                case -2103102782: 
                    if (method.equals("_get_pullYN")) {
                        return _get_pullYN(in, reply);
                    }
                case -2093033683: 
                    if (method.equals("_get_sales_status")) {
                        return _get_sales_status(in, reply);
                    }
                case -2076203351: 
                    if (method.equals("J_copyFromEJB")) {
                        return J_copyFromEJB(in, reply);
                    }
                case -2068650483: 
                    if (method.equals("_get_project_status_date")) {
                        return _get_project_status_date(in, reply);
                    }
                case -2050064926: 
                    if (method.equals("_set_barcode_scan_datetime")) {
                        return _set_barcode_scan_datetime(in, reply);
                    }
                case -2036782429: 
                    if (method.equals("privateSetAsmKey")) {
                        return privateSetAsmKey(in, reply);
                    }
                case -2022482237: 
                    if (method.equals("_get_source")) {
                        return _get_source(in, reply);
                    }
                case -1980950176: 
                    if (method.equals("_set_collection_datetime")) {
                        return _set_collection_datetime(in, reply);
                    }
                case -1971874585: 
                    if (method.equals("_set_cellsPerMl")) {
                        return _set_cellsPerMl(in, reply);
                    }
                case -1936859710: 
                    if (method.equals("_get_volume")) {
                        return _get_volume(in, reply);
                    }
                case -1917568736: 
                    if (method.equals("_get_weight")) {
                        return _get_weight(in, reply);
                    }
                case -1913592779: 
                    if (method.equals("_get_paraffinFeatureCid")) {
                        return _get_paraffinFeatureCid(in, reply);
                    }
                case -1905530943: 
                    if (method.equals("_get_importedYN")) {
                        return _get_importedYN(in, reply);
                    }
                case -1884046126: 
                    if (method.equals("_get_ardais_acct_key")) {
                        return _get_ardais_acct_key(in, reply);
                    }
                case -1862806564: 
                    if (method.equals("_get_hoursInFixative")) {
                        return _get_hoursInFixative(in, reply);
                    }
                case -1824186080: 
                    if (method.equals("_set_diMinThicknessPfinCid")) {
                        return _set_diMinThicknessPfinCid(in, reply);
                    }
                case -1802983031: 
                    if (method.equals("_set_asm_position")) {
                        return _set_asm_position(in, reply);
                    }
                case -1789346766: 
                    if (method.equals("_set_diMaxThicknessPfinCid")) {
                        return _set_diMaxThicknessPfinCid(in, reply);
                    }
                case -1786893342: 
                    if (method.equals("_get_tissueFindingCid")) {
                        return _get_tissueFindingCid(in, reply);
                    }
                case -1786470115: 
                    if (method.equals("_get_totalNumOfCellsExRepCui")) {
                        return _get_totalNumOfCellsExRepCui(in, reply);
                    }
                case -1767053462: 
                    if (method.equals("_set_receiptDate")) {
                        return _set_receiptDate(in, reply);
                    }
                case -1727408929: 
                    if (method.equals("_set_weightUnitCui")) {
                        return _set_weightUnitCui(in, reply);
                    }
                case -1704617677: 
                    if (method.equals("secondarySetSamplebox")) {
                        return secondarySetSamplebox(in, reply);
                    }
                case -1690953886: 
                    if (method.equals("_set_preservation_datetime")) {
                        return _set_preservation_datetime(in, reply);
                    }
                case -1656780591: 
                    if (method.equals("_set_concentration")) {
                        return _set_concentration(in, reply);
                    }
                case -1642569313: 
                    if (method.equals("setSamplebox")) {
                        return setSamplebox(in, reply);
                    }
                case -1640009582: 
                    if (method.equals("getSamplestatus")) {
                        return getSamplestatus(in, reply);
                    }
                case -1637926645: 
                    if (method.equals("_get_histoSubdividable")) {
                        return _get_histoSubdividable(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1491867475: 
                    if (method.equals("_get_qc_verified")) {
                        return _get_qc_verified(in, reply);
                    }
                case -1425716741: 
                    if (method.equals("_get_ardaisId")) {
                        return _get_ardaisId(in, reply);
                    }
                case -1408183954: 
                    if (method.equals("_set_percentViability")) {
                        return _set_percentViability(in, reply);
                    }
                case -1317508031: 
                    if (method.equals("_get_customerId")) {
                        return _get_customerId(in, reply);
                    }
                case -1289223298: 
                    if (method.equals("_get_volumeInUl")) {
                        return _get_volumeInUl(in, reply);
                    }
                case -1264534188: 
                    if (method.equals("secondaryRemoveSamplestatus")) {
                        return secondaryRemoveSamplestatus(in, reply);
                    }
                case -1253446726: 
                    if (method.equals("_get_releasedYN")) {
                        return _get_releasedYN(in, reply);
                    }
                case -1249367227: 
                    if (method.equals("getAsm")) {
                        return getAsm(in, reply);
                    }
                case -1193967905: 
                    if (method.equals("_get_weightInMg")) {
                        return _get_weightInMg(in, reply);
                    }
                case -1190346403: 
                    if (method.equals("addSamplestatus")) {
                        return addSamplestatus(in, reply);
                    }
                case -1178708132: 
                    if (method.equals("_get_histoMinThicknessPfinCid")) {
                        return _get_histoMinThicknessPfinCid(in, reply);
                    }
                case -1143868818: 
                    if (method.equals("_get_histoMaxThicknessPfinCid")) {
                        return _get_histoMaxThicknessPfinCid(in, reply);
                    }
                case -1125179393: 
                    if (method.equals("_set_diWidthAcrossPfinCid")) {
                        return _set_diWidthAcrossPfinCid(in, reply);
                    }
                case -1110874091: 
                    if (method.equals("_get_lastknownlocationid")) {
                        return _get_lastknownlocationid(in, reply);
                    }
                case -1015420290: 
                    if (method.equals("_set_sampleTypeCid")) {
                        return _set_sampleTypeCid(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -953096131: 
                    if (method.equals("privateSetSampleboxKey")) {
                        return privateSetSampleboxKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -905817415: 
                    if (method.equals("setAsm")) {
                        return setAsm(in, reply);
                    }
                case -903276836: 
                    if (method.equals("_set_subdivision_date")) {
                        return _set_subdivision_date(in, reply);
                    }
                case -898755409: 
                    if (method.equals("_set_pullDate")) {
                        return _set_pullDate(in, reply);
                    }
                case -867784633: 
                    if (method.equals("_get_parent_barcode_id")) {
                        return _get_parent_barcode_id(in, reply);
                    }
                case -797260550: 
                    if (method.equals("_get_percentViability")) {
                        return _get_percentViability(in, reply);
                    }
                case -787256109: 
                    if (method.equals("_get_weightUnitCui")) {
                        return _get_weightUnitCui(in, reply);
                    }
                case -716627771: 
                    if (method.equals("_get_concentration")) {
                        return _get_concentration(in, reply);
                    }
                case -704326867: 
                    if (method.equals("_get_consentId")) {
                        return _get_consentId(in, reply);
                    }
                case -610470194: 
                    if (method.equals("_get_formatDetailCid")) {
                        return _get_formatDetailCid(in, reply);
                    }
                case -600464471: 
                    if (method.equals("_set_paraffinFeatureCid")) {
                        return _set_paraffinFeatureCid(in, reply);
                    }
                case -574807040: 
                    if (method.equals("_get_qc_verified_date")) {
                        return _get_qc_verified_date(in, reply);
                    }
                case -551606287: 
                    if (method.equals("_set_yield")) {
                        return _set_yield(in, reply);
                    }
                case -514976259: 
                    if (method.equals("_set_volumeUnitCui")) {
                        return _set_volumeUnitCui(in, reply);
                    }
                case -359231244: 
                    if (method.equals("_get_samplebox_box_barcode_id")) {
                        return _get_samplebox_box_barcode_id(in, reply);
                    }
                case -336989211: 
                    if (method.equals("_get_yield")) {
                        return _get_yield(in, reply);
                    }
                case -333101901: 
                    if (method.equals("_set_sampleSizeMeetsSpecs")) {
                        return _set_sampleSizeMeetsSpecs(in, reply);
                    }
                case -321098357: 
                    if (method.equals("_get_diWidthAcrossPfinCid")) {
                        return _get_diWidthAcrossPfinCid(in, reply);
                    }
                case -292353432: 
                    if (method.equals("_get_subdivision_date")) {
                        return _get_subdivision_date(in, reply);
                    }
                case -282251298: 
                    if (method.equals("_get_asm_note")) {
                        return _get_asm_note(in, reply);
                    }
                case -200138381: 
                    if (method.equals("_get_cellsPerMl")) {
                        return _get_cellsPerMl(in, reply);
                    }
                case -166297546: 
                    if (method.equals("_set_pullYN")) {
                        return _set_pullYN(in, reply);
                    }
                case -153874430: 
                    if (method.equals("_set_cell_ref_location")) {
                        return _set_cell_ref_location(in, reply);
                    }
                case -109201571: 
                    if (method.equals("_set_otherParaffinFeature")) {
                        return _set_otherParaffinFeature(in, reply);
                    }
                case -91959529: 
                    if (method.equals("_get_qc_status")) {
                        return _get_qc_status(in, reply);
                    }
                case -85677001: 
                    if (method.equals("_set_source")) {
                        return _set_source(in, reply);
                    }
                case -78547288: 
                    if (method.equals("_get_allocation_ind")) {
                        return _get_allocation_ind(in, reply);
                    }
                case -75267470: 
                    if (method.equals("_get_sampleTypeCid")) {
                        return _get_sampleTypeCid(in, reply);
                    }
                case -47607695: 
                    if (method.equals("_set_otherHistoReembedReason")) {
                        return _set_otherHistoReembedReason(in, reply);
                    }
                case -32677126: 
                    if (method.equals("_set_bufferTypeOther")) {
                        return _set_bufferTypeOther(in, reply);
                    }
                case -31103294: 
                    if (method.equals("_set_qcpostedYN")) {
                        return _set_qcpostedYN(in, reply);
                    }
                case -13975370: 
                    if (method.equals("_set_orphan_datetime")) {
                        return _set_orphan_datetime(in, reply);
                    }
                case -11568379: 
                    if (method.equals("_set_pullReason")) {
                        return _set_pullReason(in, reply);
                    }
                case -54474: 
                    if (method.equals("_set_volume")) {
                        return _set_volume(in, reply);
                    }
                case 19236500: 
                    if (method.equals("_set_weight")) {
                        return _set_weight(in, reply);
                    }
                case 28459797: 
                    if (method.equals("_get_asm_position")) {
                        return _get_asm_position(in, reply);
                    }
                case 37651628: 
                    if (method.equals("_set_discordantYN")) {
                        return _set_discordantYN(in, reply);
                    }
                case 45783781: 
                    if (method.equals("_get_inv_status_date")) {
                        return _get_inv_status_date(in, reply);
                    }
                case 59420624: 
                    if (method.equals("_set_histoMinThicknessPfinCid")) {
                        return _set_histoMinThicknessPfinCid(in, reply);
                    }
                case 71717504: 
                    if (method.equals("_get_project_status")) {
                        return _get_project_status(in, reply);
                    }
                case 94259938: 
                    if (method.equals("_set_histoMaxThicknessPfinCid")) {
                        return _set_histoMaxThicknessPfinCid(in, reply);
                    }
                case 128140672: 
                    if (method.equals("_get_sales_status_date")) {
                        return _get_sales_status_date(in, reply);
                    }
                case 176000952: 
                    if (method.equals("J_copyToEJB")) {
                        return J_copyToEJB(in, reply);
                    }
                case 209173308: 
                    if (method.equals("_get_born_date")) {
                        return _get_born_date(in, reply);
                    }
                case 243452700: 
                    if (method.equals("_set_totalNumOfCells")) {
                        return _set_totalNumOfCells(in, reply);
                    }
                case 261745236: 
                    if (method.equals("_get_collection_datetime")) {
                        return _get_collection_datetime(in, reply);
                    }
                case 409444176: 
                    if (method.equals("_set_histoNotes")) {
                        return _set_histoNotes(in, reply);
                    }
                case 425176561: 
                    if (method.equals("_get_volumeUnitCui")) {
                        return _get_volumeUnitCui(in, reply);
                    }
                case 459602767: 
                    if (method.equals("_set_histoWidthAcrossPfinCid")) {
                        return _set_histoWidthAcrossPfinCid(in, reply);
                    }
                case 470979135: 
                    if (method.equals("_get_sampleSizeMeetsSpecs")) {
                        return _get_sampleSizeMeetsSpecs(in, reply);
                    }
                case 527906662: 
                    if (method.equals("_get_sampleboxKey")) {
                        return _get_sampleboxKey(in, reply);
                    }
                case 572020897: 
                    if (method.equals("_set_bufferTypeCui")) {
                        return _set_bufferTypeCui(in, reply);
                    }
                case 614646226: 
                    if (method.equals("_get_sectionCount")) {
                        return _get_sectionCount(in, reply);
                    }
                case 617700149: 
                    if (method.equals("_set_importedYN")) {
                        return _set_importedYN(in, reply);
                    }
                case 628518859: 
                    if (method.equals("_get_diagnosisOtherBest")) {
                        return _get_diagnosisOtherBest(in, reply);
                    }
                case 647066063: 
                    if (method.equals("_set_type_of_fixative")) {
                        return _set_type_of_fixative(in, reply);
                    }
                case 694879465: 
                    if (method.equals("_get_otherParaffinFeature")) {
                        return _get_otherParaffinFeature(in, reply);
                    }
                case 793833780: 
                    if (method.equals("_get_tissueFindingOther")) {
                        return _get_tissueFindingOther(in, reply);
                    }
                case 799523321: 
                    if (method.equals("_get_histoReembedReasonCid")) {
                        return _get_histoReembedReasonCid(in, reply);
                    }
                case 821052176: 
                    if (method.equals("_get_appearanceBest")) {
                        return _get_appearanceBest(in, reply);
                    }
                case 825105912: 
                    if (method.equals("_set_collection_datetime_dpc")) {
                        return _set_collection_datetime_dpc(in, reply);
                    }
                case 841486364: 
                    if (method.equals("_set_allocation_ind")) {
                        return _set_allocation_ind(in, reply);
                    }
                case 867193310: 
                    if (method.equals("_set_ardais_acct_key")) {
                        return _set_ardais_acct_key(in, reply);
                    }
                case 878897512: 
                    if (method.equals("_set_samplebox_box_barcode_id")) {
                        return _set_samplebox_box_barcode_id(in, reply);
                    }
                case 888432872: 
                    if (method.equals("_set_hoursInFixative")) {
                        return _set_hoursInFixative(in, reply);
                    }
                case 898284311: 
                    if (method.equals("_set_histoSubdividable")) {
                        return _set_histoSubdividable(in, reply);
                    }
                case 941397793: 
                    if (method.equals("_set_lastknownlocationid")) {
                        return _set_lastknownlocationid(in, reply);
                    }
                case 983304520: 
                    if (method.equals("_set_born_date")) {
                        return _set_born_date(in, reply);
                    }
                case 1039662525: 
                    if (method.equals("_get_tissueOriginOther")) {
                        return _get_tissueOriginOther(in, reply);
                    }
                case 1103405355: 
                    if (method.equals("getSamplebox")) {
                        return getSamplebox(in, reply);
                    }
                case 1115408690: 
                    if (method.equals("_get_diagnosisCuiBest")) {
                        return _get_diagnosisCuiBest(in, reply);
                    }
                case 1162278568: 
                    if (method.equals("_get_inv_status")) {
                        return _get_inv_status(in, reply);
                    }
                case 1162963497: 
                    if (method.equals("_set_totalNumOfCellsExRepCui")) {
                        return _set_totalNumOfCellsExRepCui(in, reply);
                    }
                case 1176514959: 
                    if (method.equals("_get_sampleRegistrationForm")) {
                        return _get_sampleRegistrationForm(in, reply);
                    }
                case 1205723061: 
                    if (method.equals("_set_customerId")) {
                        return _set_customerId(in, reply);
                    }
                case 1234007794: 
                    if (method.equals("_set_volumeInUl")) {
                        return _set_volumeInUl(in, reply);
                    }
                case 1257989467: 
                    if (method.equals("_get_type_of_fixative")) {
                        return _get_type_of_fixative(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1266741330: 
                    if (method.equals("_set_asm_note")) {
                        return _set_asm_note(in, reply);
                    }
                case 1269784366: 
                    if (method.equals("_set_releasedYN")) {
                        return _set_releasedYN(in, reply);
                    }
                case 1297925989: 
                    if (method.equals("_get_otherHistoReembedReason")) {
                        return _get_otherHistoReembedReason(in, reply);
                    }
                case 1329263187: 
                    if (method.equals("_set_weightInMg")) {
                        return _set_weightInMg(in, reply);
                    }
                case 1382074027: 
                    if (method.equals("_get_tissueOriginCid")) {
                        return _get_tissueOriginCid(in, reply);
                    }
                case 1401610710: 
                    if (method.equals("_get_barcode_scan_datetime")) {
                        return _get_barcode_scan_datetime(in, reply);
                    }
                case 1457746249: 
                    if (method.equals("secondaryAddSamplestatus")) {
                        return secondaryAddSamplestatus(in, reply);
                    }
                case 1508133626: 
                    if (method.equals("_set_preservation_datetime_dpc")) {
                        return _set_preservation_datetime_dpc(in, reply);
                    }
                case 1511050734: 
                    if (method.equals("_get_bufferTypeOther")) {
                        return _get_bufferTypeOther(in, reply);
                    }
                case 1512173717: 
                    if (method.equals("_get_bufferTypeCui")) {
                        return _get_bufferTypeCui(in, reply);
                    }
                case 1529752490: 
                    if (method.equals("_get_orphan_datetime")) {
                        return _get_orphan_datetime(in, reply);
                    }
                case 1548752643: 
                    if (method.equals("_set_sampleRegistrationForm")) {
                        return _set_sampleRegistrationForm(in, reply);
                    }
                case 1604881910: 
                    if (method.equals("_get_cell_ref_location")) {
                        return _get_cell_ref_location(in, reply);
                    }
                case 1607315414: 
                    if (method.equals("_get_qc_status_date")) {
                        return _get_qc_status_date(in, reply);
                    }
                case 1617161310: 
                    if (method.equals("_get_receiptDate")) {
                        return _get_receiptDate(in, reply);
                    }
                case 1627489556: 
                    if (method.equals("_get_diMinThicknessPfinCid")) {
                        return _get_diMinThicknessPfinCid(in, reply);
                    }
                case 1642814981: 
                    if (method.equals("_set_histoReembedReasonCid")) {
                        return _set_histoReembedReasonCid(in, reply);
                    }
                case 1662328870: 
                    if (method.equals("_get_diMaxThicknessPfinCid")) {
                        return _get_diMaxThicknessPfinCid(in, reply);
                    }
                case 1668426323: 
                    if (method.equals("_set_parent_barcode_id")) {
                        return _set_parent_barcode_id(in, reply);
                    }
                case 1740632910: 
                    if (method.equals("_get_qcpostedYN")) {
                        return _get_qcpostedYN(in, reply);
                    }
                case 1760167825: 
                    if (method.equals("_get_pullReason")) {
                        return _get_pullReason(in, reply);
                    }
                case 1760578700: 
                    if (method.equals("_get_asmKey")) {
                        return _get_asmKey(in, reply);
                    }
                case 1760721750: 
                    if (method.equals("_get_preservation_datetime")) {
                        return _get_preservation_datetime(in, reply);
                    }
                case 1780847854: 
                    if (method.equals("_get_preservation_datetime_dpc")) {
                        return _get_preservation_datetime_dpc(in, reply);
                    }
                case 1787180560: 
                    if (method.equals("_get_totalNumOfCells")) {
                        return _get_totalNumOfCells(in, reply);
                    }
                case 1805136451: 
                    if (method.equals("_get_histoWidthAcrossPfinCid")) {
                        return _get_histoWidthAcrossPfinCid(in, reply);
                    }
                case 1847219259: 
                    if (method.equals("_get_pullDate")) {
                        return _get_pullDate(in, reply);
                    }
                case 1869094456: 
                    if (method.equals("_get_discordantYN")) {
                        return _get_discordantYN(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 2015742285: 
                    if (method.equals("secondarySetAsm")) {
                        return secondarySetAsm(in, reply);
                    }
                case 2140769242: 
                    if (method.equals("_set_formatDetailCid")) {
                        return _set_formatDetailCid(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream J_copyFromEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable result = target._copyFromEJB();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Hashtable.class);
        return out;
    }
    
    private OutputStream J_copyToEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable arg0 = (Hashtable) in.read_value(Hashtable.class);
        target._copyToEJB(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream addSamplestatus(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplestatus arg0 = (Samplestatus) in.read_Object(Samplestatus.class);
        target.addSamplestatus(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_allocation_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAllocation_ind();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_ardais_acct_key(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_acct_key();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream getAsm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asm result;
        try {
            result = target.getAsm();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_asm_note(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAsm_note();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_asm_position(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAsm_position();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_asmKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        AsmKey result = target.getAsmKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,AsmKey.class);
        return out;
    }
    
    private OutputStream _get_barcode_scan_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getBarcode_scan_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_born_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getBorn_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_cell_ref_location(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getCell_ref_location();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consentId(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsentId();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_ardaisId(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdaisId();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_inv_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getInv_status();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_inv_status_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getInv_status_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_tissueFindingCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTissueFindingCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_tissueFindingOther(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTissueFindingOther();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_appearanceBest(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAppearanceBest();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_diagnosisCuiBest(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiagnosisCuiBest();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_diagnosisOtherBest(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiagnosisOtherBest();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_tissueOriginCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTissueOriginCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_tissueOriginOther(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTissueOriginOther();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_orphan_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getOrphan_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_parent_barcode_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getParent_barcode_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_project_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getProject_status();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_project_status_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getProject_status_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_qc_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getQc_status();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_qc_status_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getQc_status_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_qc_verified(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getQc_verified();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_qc_verified_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getQc_verified_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_sales_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSales_status();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_sales_status_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getSales_status_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_sectionCount(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Integer result = target.getSectionCount();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private OutputStream getSamplebox(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplebox result;
        try {
            result = target.getSamplebox();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_samplebox_box_barcode_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSamplebox_box_barcode_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_sampleboxKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        SampleboxKey result = target.getSampleboxKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,SampleboxKey.class);
        return out;
    }
    
    private OutputStream getSamplestatus(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Enumeration result;
        try {
            result = target.getSamplestatus();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private OutputStream _get_subdivision_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getSubdivision_date();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_type_of_fixative(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getType_of_fixative();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream privateSetAsmKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        AsmKey arg0 = (AsmKey) in.read_value(AsmKey.class);
        target.privateSetAsmKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream privateSetSampleboxKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        SampleboxKey arg0 = (SampleboxKey) in.read_value(SampleboxKey.class);
        target.privateSetSampleboxKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryAddSamplestatus(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplestatus arg0 = (Samplestatus) in.read_Object(Samplestatus.class);
        target.secondaryAddSamplestatus(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryRemoveSamplestatus(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplestatus arg0 = (Samplestatus) in.read_Object(Samplestatus.class);
        target.secondaryRemoveSamplestatus(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondarySetAsm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asm arg0 = (Asm) in.read_Object(Asm.class);
        target.secondarySetAsm(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondarySetSamplebox(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplebox arg0 = (Samplebox) in.read_Object(Samplebox.class);
        target.secondarySetSamplebox(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_allocation_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setAllocation_ind(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_ardais_acct_key(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_acct_key(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream setAsm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asm arg0 = (Asm) in.read_Object(Asm.class);
        target.setAsm(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_asm_note(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setAsm_note(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_asm_position(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setAsm_position(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_barcode_scan_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setBarcode_scan_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_born_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setBorn_date(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_cell_ref_location(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setCell_ref_location(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_orphan_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setOrphan_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_parent_barcode_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setParent_barcode_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream setSamplebox(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Samplebox arg0 = (Samplebox) in.read_Object(Samplebox.class);
        target.setSamplebox(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_samplebox_box_barcode_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSamplebox_box_barcode_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_subdivision_date(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setSubdivision_date(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_type_of_fixative(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setType_of_fixative(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_pullYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getPullYN();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_pullYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setPullYN(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_pullReason(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getPullReason();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_pullReason(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setPullReason(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_releasedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getReleasedYN();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_releasedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setReleasedYN(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_discordantYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiscordantYN();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_discordantYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDiscordantYN(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_pullDate(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getPullDate();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _set_pullDate(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setPullDate(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_diMinThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiMinThicknessPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_diMinThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDiMinThicknessPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_diMaxThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiMaxThicknessPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_diMaxThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDiMaxThicknessPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_diWidthAcrossPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDiWidthAcrossPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_diWidthAcrossPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDiWidthAcrossPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_formatDetailCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getFormatDetailCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_formatDetailCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setFormatDetailCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_sampleSizeMeetsSpecs(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSampleSizeMeetsSpecs();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_sampleSizeMeetsSpecs(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSampleSizeMeetsSpecs(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_hoursInFixative(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Integer result = target.getHoursInFixative();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private OutputStream _set_hoursInFixative(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        target.setHoursInFixative(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_qcpostedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getQcpostedYN();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_qcpostedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setQcpostedYN(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoMinThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoMinThicknessPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoMinThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoMinThicknessPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoMaxThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoMaxThicknessPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoMaxThicknessPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoMaxThicknessPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoWidthAcrossPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoWidthAcrossPfinCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoWidthAcrossPfinCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoWidthAcrossPfinCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoReembedReasonCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoReembedReasonCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoReembedReasonCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoReembedReasonCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoSubdividable(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoSubdividable();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoSubdividable(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoSubdividable(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_histoNotes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getHistoNotes();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_histoNotes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setHistoNotes(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_otherHistoReembedReason(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getOtherHistoReembedReason();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_otherHistoReembedReason(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setOtherHistoReembedReason(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_paraffinFeatureCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getParaffinFeatureCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_paraffinFeatureCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setParaffinFeatureCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_otherParaffinFeature(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getOtherParaffinFeature();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_otherParaffinFeature(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setOtherParaffinFeature(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_receiptDate(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getReceiptDate();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _set_receiptDate(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setReceiptDate(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_lastknownlocationid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getLastknownlocationid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_lastknownlocationid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setLastknownlocationid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_importedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getImportedYN();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_importedYN(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setImportedYN(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_customerId(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getCustomerId();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_customerId(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setCustomerId(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_sampleTypeCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSampleTypeCid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_sampleTypeCid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSampleTypeCid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_collection_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getCollection_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _set_collection_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setCollection_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_preservation_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getPreservation_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _set_preservation_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setPreservation_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_volume(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getVolume();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_volume(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setVolume(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_collection_datetime_dpc(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getCollection_datetime_dpc();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_collection_datetime_dpc(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setCollection_datetime_dpc(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_preservation_datetime_dpc(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getPreservation_datetime_dpc();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_preservation_datetime_dpc(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setPreservation_datetime_dpc(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_bufferTypeCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBufferTypeCui();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_bufferTypeCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setBufferTypeCui(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_bufferTypeOther(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBufferTypeOther();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_bufferTypeOther(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setBufferTypeOther(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_totalNumOfCells(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getTotalNumOfCells();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_totalNumOfCells(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setTotalNumOfCells(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_totalNumOfCellsExRepCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTotalNumOfCellsExRepCui();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_totalNumOfCellsExRepCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setTotalNumOfCellsExRepCui(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_cellsPerMl(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getCellsPerMl();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_cellsPerMl(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setCellsPerMl(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_percentViability(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Integer result = target.getPercentViability();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private OutputStream _set_percentViability(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        target.setPercentViability(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_source(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSource();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_source(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSource(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_concentration(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getConcentration();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_concentration(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setConcentration(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_yield(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getYield();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_yield(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setYield(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_volumeUnitCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getVolumeUnitCui();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_volumeUnitCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setVolumeUnitCui(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_volumeInUl(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setVolumeInUl(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_volumeInUl(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getVolumeInUl();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _get_weight(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getWeight();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_weight(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setWeight(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_weightInMg(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getWeightInMg();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_weightInMg(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setWeightInMg(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_weightUnitCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getWeightUnitCui();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_weightUnitCui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setWeightUnitCui(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_sampleRegistrationForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getSampleRegistrationForm();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_sampleRegistrationForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setSampleRegistrationForm(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
}
