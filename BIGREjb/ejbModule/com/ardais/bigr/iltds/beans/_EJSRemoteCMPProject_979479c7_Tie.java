// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ardais.bigr.iltds.beans;

import java.io.Serializable;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.sql.Timestamp;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteCMPProject_979479c7_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteCMPProject_979479c7 target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.ardais.bigr.iltds.beans.Project:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.ivj.ejb.runtime.CopyHelper:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteCMPProject_979479c7) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2076203351: 
                    if (method.equals("J_copyFromEJB")) {
                        return J_copyFromEJB(in, reply);
                    }
                case -2049172510: 
                    if (method.equals("_set_percentcomplete")) {
                        return _set_percentcomplete(in, reply);
                    }
                case -2018457958: 
                    if (method.equals("_get_status")) {
                        return _get_status(in, reply);
                    }
                case -1845986982: 
                    if (method.equals("_set_ardaisuserid")) {
                        return _set_ardaisuserid(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1500576179: 
                    if (method.equals("getProjectsample")) {
                        return getProjectsample(in, reply);
                    }
                case -1355054212: 
                    if (method.equals("_get_projectname")) {
                        return _get_projectname(in, reply);
                    }
                case -1163421076: 
                    if (method.equals("_get_projectId")) {
                        return _get_projectId(in, reply);
                    }
                case -1078133063: 
                    if (method.equals("removeWorkorder")) {
                        return removeWorkorder(in, reply);
                    }
                case -1027780995: 
                    if (method.equals("getLineitem")) {
                        return getLineitem(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -852652060: 
                    if (method.equals("_set_daterequested")) {
                        return _set_daterequested(in, reply);
                    }
                case -791882170: 
                    if (method.equals("_set_ardaisaccountkey")) {
                        return _set_ardaisaccountkey(in, reply);
                    }
                case -561572059: 
                    if (method.equals("_set_notes")) {
                        return _set_notes(in, reply);
                    }
                case -505444650: 
                    if (method.equals("_get_percentcomplete")) {
                        return _get_percentcomplete(in, reply);
                    }
                case -496885491: 
                    if (method.equals("_get_dateapproved")) {
                        return _get_dateapproved(in, reply);
                    }
                case -444301688: 
                    if (method.equals("_set_projectname")) {
                        return _set_projectname(in, reply);
                    }
                case -405165653: 
                    if (method.equals("removeLineitem")) {
                        return removeLineitem(in, reply);
                    }
                case -346954983: 
                    if (method.equals("_get_notes")) {
                        return _get_notes(in, reply);
                    }
                case -180958766: 
                    if (method.equals("_get_ardaisaccountkey")) {
                        return _get_ardaisaccountkey(in, reply);
                    }
                case -81652722: 
                    if (method.equals("_set_status")) {
                        return _set_status(in, reply);
                    }
                case -14544154: 
                    if (method.equals("_get_ardaisuserid")) {
                        return _get_ardaisuserid(in, reply);
                    }
                case 40574070: 
                    if (method.equals("secondaryAddProjectsample")) {
                        return secondaryAddProjectsample(in, reply);
                    }
                case 87500760: 
                    if (method.equals("_get_daterequested")) {
                        return _get_daterequested(in, reply);
                    }
                case 95898687: 
                    if (method.equals("secondaryRemoveLineitem")) {
                        return secondaryRemoveLineitem(in, reply);
                    }
                case 176000952: 
                    if (method.equals("J_copyToEJB")) {
                        return J_copyToEJB(in, reply);
                    }
                case 215006408: 
                    if (method.equals("addLineitem")) {
                        return addLineitem(in, reply);
                    }
                case 351552180: 
                    if (method.equals("secondaryAddLineitem")) {
                        return secondaryAddLineitem(in, reply);
                    }
                case 905283280: 
                    if (method.equals("secondaryAddWorkorder")) {
                        return secondaryAddWorkorder(in, reply);
                    }
                case 967331644: 
                    if (method.equals("addWorkorder")) {
                        return addWorkorder(in, reply);
                    }
                case 1095627815: 
                    if (method.equals("getWorkorder")) {
                        return getWorkorder(in, reply);
                    }
                case 1176010813: 
                    if (method.equals("_get_dateshipped")) {
                        return _get_dateshipped(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1549226443: 
                    if (method.equals("secondaryRemoveProjectsample")) {
                        return secondaryRemoveProjectsample(in, reply);
                    }
                case 1569959589: 
                    if (method.equals("secondaryRemoveWorkorder")) {
                        return secondaryRemoveWorkorder(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1966638977: 
                    if (method.equals("_set_dateapproved")) {
                        return _set_dateapproved(in, reply);
                    }
                case 2086763337: 
                    if (method.equals("_set_dateshipped")) {
                        return _set_dateshipped(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream J_copyFromEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable result = target._copyFromEJB();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Hashtable.class);
        return out;
    }
    
    private OutputStream J_copyToEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable arg0 = (Hashtable) in.read_value(Hashtable.class);
        target._copyToEJB(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream addLineitem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Lineitem arg0 = (Lineitem) in.read_Object(Lineitem.class);
        target.addLineitem(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream addWorkorder(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Workorder arg0 = (Workorder) in.read_Object(Workorder.class);
        target.addWorkorder(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardaisaccountkey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdaisaccountkey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_ardaisuserid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdaisuserid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_dateapproved(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getDateapproved();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_daterequested(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getDaterequested();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_dateshipped(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getDateshipped();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream getLineitem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Enumeration result;
        try {
            result = target.getLineitem();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private OutputStream _get_notes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getNotes();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_percentcomplete(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getPercentcomplete();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _get_projectId(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getProjectId();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_projectname(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getProjectname();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream getProjectsample(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Enumeration result;
        try {
            result = target.getProjectsample();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private OutputStream _get_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getStatus();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream getWorkorder(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Enumeration result;
        try {
            result = target.getWorkorder();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private OutputStream removeLineitem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Lineitem arg0 = (Lineitem) in.read_Object(Lineitem.class);
        target.removeLineitem(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream removeWorkorder(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Workorder arg0 = (Workorder) in.read_Object(Workorder.class);
        target.removeWorkorder(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryAddLineitem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Lineitem arg0 = (Lineitem) in.read_Object(Lineitem.class);
        target.secondaryAddLineitem(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryAddProjectsample(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Projectsample arg0 = (Projectsample) in.read_Object(Projectsample.class);
        target.secondaryAddProjectsample(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryAddWorkorder(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Workorder arg0 = (Workorder) in.read_Object(Workorder.class);
        target.secondaryAddWorkorder(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryRemoveLineitem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Lineitem arg0 = (Lineitem) in.read_Object(Lineitem.class);
        target.secondaryRemoveLineitem(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryRemoveProjectsample(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Projectsample arg0 = (Projectsample) in.read_Object(Projectsample.class);
        target.secondaryRemoveProjectsample(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryRemoveWorkorder(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Workorder arg0 = (Workorder) in.read_Object(Workorder.class);
        target.secondaryRemoveWorkorder(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_ardaisaccountkey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdaisaccountkey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_ardaisuserid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdaisuserid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_dateapproved(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setDateapproved(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_daterequested(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setDaterequested(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_dateshipped(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setDateshipped(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_notes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setNotes(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_percentcomplete(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setPercentcomplete(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_projectname(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setProjectname(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_status(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setStatus(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
}
