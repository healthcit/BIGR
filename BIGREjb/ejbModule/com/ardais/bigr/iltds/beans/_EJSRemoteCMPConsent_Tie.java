// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ardais.bigr.iltds.beans;

import java.io.Serializable;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.sql.Timestamp;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteCMPConsent_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteCMPConsent target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.ardais.bigr.iltds.beans.Consent:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.ivj.ejb.runtime.CopyHelper:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteCMPConsent) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2126716712: 
                    if (method.equals("_set_additional_needle_stick_yn")) {
                        return _set_additional_needle_stick_yn(in, reply);
                    }
                case -2093742109: 
                    if (method.equals("_get_case_registration_form")) {
                        return _get_case_registration_form(in, reply);
                    }
                case -2076203351: 
                    if (method.equals("J_copyFromEJB")) {
                        return J_copyFromEJB(in, reply);
                    }
                case -2017418845: 
                    if (method.equals("_set_consent_pull_reason_cd")) {
                        return _set_consent_pull_reason_cd(in, reply);
                    }
                case -2011529962: 
                    if (method.equals("_get_psa")) {
                        return _get_psa(in, reply);
                    }
                case -1931317592: 
                    if (method.equals("_get_consent_datetime")) {
                        return _get_consent_datetime(in, reply);
                    }
                case -1884046126: 
                    if (method.equals("_get_ardais_acct_key")) {
                        return _get_ardais_acct_key(in, reply);
                    }
                case -1844270376: 
                    if (method.equals("secondarySetGeolocation")) {
                        return secondarySetGeolocation(in, reply);
                    }
                case -1775760950: 
                    if (method.equals("_set_form_verified_by_staff_id")) {
                        return _set_form_verified_by_staff_id(in, reply);
                    }
                case -1750758796: 
                    if (method.equals("_get_consent_pull_request_by")) {
                        return _get_consent_pull_request_by(in, reply);
                    }
                case -1727372025: 
                    if (method.equals("_get_clinical_finding_notes")) {
                        return _get_clinical_finding_notes(in, reply);
                    }
                case -1721504425: 
                    if (method.equals("_set_case_registration_form")) {
                        return _set_case_registration_form(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1503046722: 
                    if (method.equals("_get_form_verified_by_staff_id")) {
                        return _get_form_verified_by_staff_id(in, reply);
                    }
                case -1497922978: 
                    if (method.equals("_get_bankable_ind")) {
                        return _get_bankable_ind(in, reply);
                    }
                case -1469451597: 
                    if (method.equals("_set_consent_release_staff_id")) {
                        return _set_consent_release_staff_id(in, reply);
                    }
                case -1438298233: 
                    if (method.equals("secondaryRemoveAsmform")) {
                        return secondaryRemoveAsmform(in, reply);
                    }
                case -1416310487: 
                    if (method.equals("_set_blood_sample_yn")) {
                        return _set_blood_sample_yn(in, reply);
                    }
                case -1394187965: 
                    if (method.equals("_set_consent_version_id")) {
                        return _set_consent_version_id(in, reply);
                    }
                case -1355134341: 
                    if (method.equals("_set_clinical_finding_notes")) {
                        return _set_clinical_finding_notes(in, reply);
                    }
                case -1291504014: 
                    if (method.equals("secondaryAddAsmform")) {
                        return secondaryAddAsmform(in, reply);
                    }
                case -1277269376: 
                    if (method.equals("_set_customer_id")) {
                        return _set_customer_id(in, reply);
                    }
                case -1247524614: 
                    if (method.equals("_get_ardais_id")) {
                        return _get_ardais_id(in, reply);
                    }
                case -1130397898: 
                    if (method.equals("privateSetArdaisstaffKey")) {
                        return privateSetArdaisstaffKey(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -1001212689: 
                    if (method.equals("_get_form_signed_ind")) {
                        return _get_form_signed_ind(in, reply);
                    }
                case -989419718: 
                    if (method.equals("_get_form_entry_staff_id")) {
                        return _get_form_entry_staff_id(in, reply);
                    }
                case -981046444: 
                    if (method.equals("_set_consent_release_datetime")) {
                        return _set_consent_release_datetime(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -800240140: 
                    if (method.equals("_set_future_contact_yn")) {
                        return _set_future_contact_yn(in, reply);
                    }
                case -614041544: 
                    if (method.equals("privateSetGeolocationKey")) {
                        return privateSetGeolocationKey(in, reply);
                    }
                case -573598512: 
                    if (method.equals("getGeolocation")) {
                        return getGeolocation(in, reply);
                    }
                case -566086266: 
                    if (method.equals("_set_consent_pull_comment")) {
                        return _set_consent_pull_comment(in, reply);
                    }
                case -501014565: 
                    if (method.equals("_get_form_entry_datetime")) {
                        return _get_form_entry_datetime(in, reply);
                    }
                case -494268512: 
                    if (method.equals("_get_policy_id")) {
                        return _get_policy_id(in, reply);
                    }
                case -473393402: 
                    if (method.equals("_set_ardais_id")) {
                        return _set_ardais_id(in, reply);
                    }
                case -460970527: 
                    if (method.equals("_get_form_verified_sign_ind")) {
                        return _get_form_verified_sign_ind(in, reply);
                    }
                case -333985124: 
                    if (method.equals("_get_comments")) {
                        return _get_comments(in, reply);
                    }
                case -291837387: 
                    if (method.equals("_set_linked")) {
                        return _set_linked(in, reply);
                    }
                case -270148514: 
                    if (method.equals("_set_consent_version_num")) {
                        return _set_consent_version_num(in, reply);
                    }
                case -251457554: 
                    if (method.equals("_get_disease_concept_id_other")) {
                        return _get_disease_concept_id_other(in, reply);
                    }
                case -88732843: 
                    if (method.equals("_set_form_verified_sign_ind")) {
                        return _set_form_verified_sign_ind(in, reply);
                    }
                case 10711173: 
                    if (method.equals("_set_ardais_staff_id")) {
                        return _set_ardais_staff_id(in, reply);
                    }
                case 48579618: 
                    if (method.equals("_set_psa")) {
                        return _set_psa(in, reply);
                    }
                case 127417373: 
                    if (method.equals("_get_blood_sample_yn")) {
                        return _get_blood_sample_yn(in, reply);
                    }
                case 176000952: 
                    if (method.equals("J_copyToEJB")) {
                        return J_copyToEJB(in, reply);
                    }
                case 237994770: 
                    if (method.equals("_get_consent_pull_comment")) {
                        return _get_consent_pull_comment(in, reply);
                    }
                case 279862700: 
                    if (method.equals("_set_policy_id")) {
                        return _set_policy_id(in, reply);
                    }
                case 326569353: 
                    if (method.equals("getAsmform")) {
                        return getAsmform(in, reply);
                    }
                case 479111199: 
                    if (method.equals("_get_ardaisstaffKey")) {
                        return _get_ardaisstaffKey(in, reply);
                    }
                case 480280438: 
                    if (method.equals("_get_best_diagnosis_cui")) {
                        return _get_best_diagnosis_cui(in, reply);
                    }
                case 525277085: 
                    if (method.equals("_get_disease_concept_id")) {
                        return _get_disease_concept_id(in, reply);
                    }
                case 695616647: 
                    if (method.equals("_get_consent_pull_staff_id")) {
                        return _get_consent_pull_staff_id(in, reply);
                    }
                case 867193310: 
                    if (method.equals("_set_ardais_acct_key")) {
                        return _set_ardais_acct_key(in, reply);
                    }
                case 958516200: 
                    if (method.equals("_get_future_contact_yn")) {
                        return _get_future_contact_yn(in, reply);
                    }
                case 965601490: 
                    if (method.equals("_set_bankable_ind")) {
                        return _set_bankable_ind(in, reply);
                    }
                case 986671202: 
                    if (method.equals("_set_disease_concept_id_other")) {
                        return _set_disease_concept_id_other(in, reply);
                    }
                case 995467553: 
                    if (method.equals("_get_geolocationKey")) {
                        return _get_geolocationKey(in, reply);
                    }
                case 1021076223: 
                    if (method.equals("_get_form_verified_datetime")) {
                        return _get_form_verified_datetime(in, reply);
                    }
                case 1058090120: 
                    if (method.equals("_get_imported_yn")) {
                        return _get_imported_yn(in, reply);
                    }
                case 1062852166: 
                    if (method.equals("_set_form_entry_staff_id")) {
                        return _set_form_entry_staff_id(in, reply);
                    }
                case 1184021800: 
                    if (method.equals("_get_consent_pull_datetime")) {
                        return _get_consent_pull_datetime(in, reply);
                    }
                case 1197943262: 
                    if (method.equals("addAsmform")) {
                        return addAsmform(in, reply);
                    }
                case 1198674816: 
                    if (method.equals("_set_consent_pull_request_by")) {
                        return _set_consent_pull_request_by(in, reply);
                    }
                case 1215007504: 
                    if (method.equals("_set_comments")) {
                        return _set_comments(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1281872250: 
                    if (method.equals("_set_dre_cid")) {
                        return _set_dre_cid(in, reply);
                    }
                case 1370452078: 
                    if (method.equals("_get_dre_cid")) {
                        return _get_dre_cid(in, reply);
                    }
                case 1393313907: 
                    if (method.equals("_set_form_verified_datetime")) {
                        return _set_form_verified_datetime(in, reply);
                    }
                case 1538908307: 
                    if (method.equals("_set_consent_pull_staff_id")) {
                        return _set_consent_pull_staff_id(in, reply);
                    }
                case 1551257319: 
                    if (method.equals("_set_form_entry_datetime")) {
                        return _set_form_entry_datetime(in, reply);
                    }
                case 1554439033: 
                    if (method.equals("_get_ardais_staff_id")) {
                        return _get_ardais_staff_id(in, reply);
                    }
                case 1587386943: 
                    if (method.equals("_get_consent_release_staff_id")) {
                        return _get_consent_release_staff_id(in, reply);
                    }
                case 1587651023: 
                    if (method.equals("_get_consent_version_id")) {
                        return _get_consent_version_id(in, reply);
                    }
                case 1750026747: 
                    if (method.equals("_set_form_signed_ind")) {
                        return _set_form_signed_ind(in, reply);
                    }
                case 1752726300: 
                    if (method.equals("_set_consent_datetime")) {
                        return _set_consent_datetime(in, reply);
                    }
                case 1838405393: 
                    if (method.equals("_set_disease_concept_id")) {
                        return _set_disease_concept_id(in, reply);
                    }
                case 1905310767: 
                    if (method.equals("_get_consent_pull_reason_cd")) {
                        return _get_consent_pull_reason_cd(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1949632580: 
                    if (method.equals("setGeolocation")) {
                        return setGeolocation(in, reply);
                    }
                case 1968842644: 
                    if (method.equals("_set_imported_yn")) {
                        return _set_imported_yn(in, reply);
                    }
                case 1972546898: 
                    if (method.equals("_get_consent_version_num")) {
                        return _get_consent_version_num(in, reply);
                    }
                case 1999054991: 
                    if (method.equals("_get_best_diagnosis_other")) {
                        return _get_best_diagnosis_other(in, reply);
                    }
                case 2027313460: 
                    if (method.equals("_set_consent_pull_datetime")) {
                        return _set_consent_pull_datetime(in, reply);
                    }
                case 2032457060: 
                    if (method.equals("_get_additional_needle_stick_yn")) {
                        return _get_additional_needle_stick_yn(in, reply);
                    }
                case 2066324673: 
                    if (method.equals("_get_linked")) {
                        return _get_linked(in, reply);
                    }
                case 2075792096: 
                    if (method.equals("_get_consent_release_datetime")) {
                        return _get_consent_release_datetime(in, reply);
                    }
                case 2106945396: 
                    if (method.equals("_get_customer_id")) {
                        return _get_customer_id(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream J_copyFromEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable result = target._copyFromEJB();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Hashtable.class);
        return out;
    }
    
    private OutputStream J_copyToEJB(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Hashtable arg0 = (Hashtable) in.read_value(Hashtable.class);
        target._copyToEJB(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardais_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_ardaisstaffKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArdaisstaffKey result = target.getArdaisstaffKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArdaisstaffKey.class);
        return out;
    }
    
    private OutputStream getAsmform(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Enumeration result;
        try {
            result = target.getAsmform();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private OutputStream _get_bankable_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBankable_ind();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getConsent_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_consent_pull_comment(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_pull_comment();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_pull_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getConsent_pull_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_consent_pull_reason_cd(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_pull_reason_cd();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_pull_request_by(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_pull_request_by();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_pull_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_pull_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_release_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getConsent_release_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_consent_release_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_release_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_consent_version_num(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getConsent_version_num();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_disease_concept_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDisease_concept_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_disease_concept_id_other(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDisease_concept_id_other();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_form_entry_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getForm_entry_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_form_entry_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getForm_entry_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_form_signed_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getForm_signed_ind();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_form_verified_by_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getForm_verified_by_staff_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_form_verified_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp result = target.getForm_verified_datetime();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Timestamp.class);
        return out;
    }
    
    private OutputStream _get_form_verified_sign_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getForm_verified_sign_ind();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream getGeolocation(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Geolocation result;
        try {
            result = target.getGeolocation();
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_geolocationKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        GeolocationKey result = target.getGeolocationKey();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,GeolocationKey.class);
        return out;
    }
    
    private OutputStream _get_linked(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getLinked();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream privateSetArdaisstaffKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArdaisstaffKey arg0 = (ArdaisstaffKey) in.read_value(ArdaisstaffKey.class);
        target.privateSetArdaisstaffKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream privateSetGeolocationKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        GeolocationKey arg0 = (GeolocationKey) in.read_value(GeolocationKey.class);
        target.privateSetGeolocationKey(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryAddAsmform(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asmform arg0 = (Asmform) in.read_Object(Asmform.class);
        target.secondaryAddAsmform(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondaryRemoveAsmform(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asmform arg0 = (Asmform) in.read_Object(Asmform.class);
        target.secondaryRemoveAsmform(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream secondarySetGeolocation(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Geolocation arg0 = (Geolocation) in.read_Object(Geolocation.class);
        target.secondarySetGeolocation(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_ardais_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_bankable_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setBankable_ind(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setConsent_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_pull_comment(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_pull_comment(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_pull_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setConsent_pull_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_pull_reason_cd(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_pull_reason_cd(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_pull_request_by(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_pull_request_by(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_pull_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_pull_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_release_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setConsent_release_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_release_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_release_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_consent_version_num(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setConsent_version_num(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_disease_concept_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDisease_concept_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_disease_concept_id_other(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDisease_concept_id_other(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_entry_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setForm_entry_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_entry_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setForm_entry_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_signed_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setForm_signed_ind(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_verified_by_staff_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setForm_verified_by_staff_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_verified_datetime(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Timestamp arg0 = (Timestamp) in.read_value(Timestamp.class);
        target.setForm_verified_datetime(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_form_verified_sign_ind(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setForm_verified_sign_ind(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream setGeolocation(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Geolocation arg0 = (Geolocation) in.read_Object(Geolocation.class);
        target.setGeolocation(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _set_linked(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setLinked(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream addAsmform(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Asmform arg0 = (Asmform) in.read_Object(Asmform.class);
        target.addAsmform(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardais_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_ardais_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_policy_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getPolicy_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_policy_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setPolicy_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_consent_version_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getConsent_version_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_consent_version_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setConsent_version_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_comments(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getComments();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_comments(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setComments(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_blood_sample_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBlood_sample_yn();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_blood_sample_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setBlood_sample_yn(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_additional_needle_stick_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getAdditional_needle_stick_yn();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_additional_needle_stick_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setAdditional_needle_stick_yn(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_future_contact_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getFuture_contact_yn();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_future_contact_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setFuture_contact_yn(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_best_diagnosis_cui(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBest_diagnosis_cui();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_best_diagnosis_other(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getBest_diagnosis_other();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _get_imported_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getImported_yn();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_imported_yn(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setImported_yn(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_customer_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getCustomer_id();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_customer_id(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setCustomer_id(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_ardais_acct_key(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getArdais_acct_key();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_ardais_acct_key(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setArdais_acct_key(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_psa(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal result = target.getPsa();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream _set_psa(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        BigDecimal arg0 = (BigDecimal) in.read_value(BigDecimal.class);
        target.setPsa(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_dre_cid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getDre_cid();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_dre_cid(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setDre_cid(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_clinical_finding_notes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getClinical_finding_notes();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_clinical_finding_notes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setClinical_finding_notes(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_case_registration_form(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getCase_registration_form();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream _set_case_registration_form(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        target.setCase_registration_form(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
}
