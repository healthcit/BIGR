package com.ardais.bigr.web.taglib;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.tagext.BodyTagSupport;

import org.apache.struts.util.ResponseUtils;

import com.ardais.bigr.api.ApiException;
import com.ardais.bigr.iltds.assistants.LegalValue;
import com.ardais.bigr.iltds.assistants.LegalValueSet;
import com.ardais.bigr.orm.helpers.BigrGbossData;
import com.gulfstreambio.gboss.GbossValue;
import com.gulfstreambio.gboss.GbossValueSet;

/**
 * Tag handler for the javascriptConceptCache tag, which creates and caches Javascript BigrConcept 
 * objects.  This allows Javascript functionality similar to 
 * {@link ORMMasterData.getConcept(java.lang.String)}.
 * <p> 
 * The page that uses this tag must include conceptGraph.js.  
 */
public class JavascriptConceptCacheTag extends BodyTagSupport {

  private String _valueSet;
  private String _categoryDomain;
  private String _includeScriptElement;

  public JavascriptConceptCacheTag() {
    super();
  }

  private String getValueSet() {
    return _valueSet;
  }

  /**
   * Sets the value set whose values are to be cached.  Either this method or
   * {@link setCategoryDomain(java.lang.String)} must be called, but not both.
   * 
   * @param  valueSet  the value set
   */
  public void setValueSet(String valueSet) {
    _valueSet = valueSet;
  }

  private String getCategoryDomain() {
    return _categoryDomain;
  }

  /**
   * Sets the category domain of the lookup list whose concepts are to be cached.  Either this 
   * method or {@link setGraphContext(java.lang.String)} must be called, but not both.
   * 
   * @param  categoryDomain  the category domain
   */
  public void setCategoryDomain(String categoryDomain) {
    _categoryDomain = categoryDomain;
  }

  private String getIncludeScriptElement() {
    return _includeScriptElement;
  }

  /**
   * Sets whether the start and end &lt;script&gt; tags should be included around the Javascript
   * generated by this tag. 
   * 
   * @param  include  "true" if the start and end &lt;script&gt; tags should be included;
   *                  "false" otherwise.  The default is "false", which means that this tag
   *                  must be used inside a &lt;script&gt; element within the JSP.
   */
  public void setIncludeScriptElement(String include) {
    _includeScriptElement = include;
  }

  /**
   * Generates the Javascript calls for creating the Javascript version of the specified concept
   * graph. 
   */
  public int doEndTag() throws JspException {
    String valueSet = getValueSet();
    String categoryDomain = getCategoryDomain();

    // Check that only one of value set or category domain is specified.    
    if ((valueSet == null) && (categoryDomain == null)) {
      throw new ApiException("In JavascriptConceptCacheTag.doEndTag: either valueSet or categoryDomain must be specified.");
    }
    else if ((valueSet != null) && (categoryDomain != null)) {
      throw new ApiException("In JavascriptConceptCacheTag.doEndTag: only one of valueSet or categoryDomain must be specified.");
    }
    
    // Start the Javascript, including the script tag if necessary.     
    StringBuffer buf = new StringBuffer(1024);
    boolean includeScript = "true".equalsIgnoreCase(getIncludeScriptElement());

    if (includeScript) {
      buf.append("<script language=\"JavaScript\">");
    }

    // Get either the graph or lookup list and add all of its concepts to a map keyed by CUI
    // with description as the map entry.
    Map concepts = new HashMap();
    if (valueSet != null) {
      GbossValueSet vs = BigrGbossData.getValueSet(valueSet);
      if (vs == null) {
        throw new ApiException("In JavascriptConceptCacheTag.doEndTag: value set " + valueSet + " does not exist.");
      }
      Iterator i = vs.depthFirstIterator();
      while (i.hasNext()) {
        GbossValue value = (GbossValue) i.next();        
        concepts.put(value.getCui(), value.getDescription());
      }
    }
    else {
      LegalValueSet lvs = BigrGbossData.getValueSetAsLegalValueSet(categoryDomain);      
      if (lvs == null) {
        throw new ApiException("In JavascriptConceptCacheTag.doEndTag: lookup list " + categoryDomain + " does not exist.");
      }
      Iterator i = lvs.getIterator();
      while (i.hasNext()) {
        LegalValue lv = (LegalValue) i.next();        
        concepts.put(lv.getValue(), lv.getDisplayValue());
      }      
    }

    // Process the map that was populated with CUI/description pairs.  All we have to do here is
    // and create the Javascript BigrConcept objects, which will automatically cache them.
    Iterator i = concepts.keySet().iterator();
    while (i.hasNext()) {
      String cui = (String) i.next();
      String desc = (String) concepts.get(cui);
      buf.append("new BigrConcept('");
      buf.append(cui);
      buf.append("', '");
      buf.append(desc);
      buf.append("');");
    }
    
    // End the script tag if necessary.     
    if (includeScript) {
      buf.append("</script>");
    }

    // Write the radio input tags to the response.
    ResponseUtils.write(pageContext, buf.toString());

    return EVAL_PAGE;
  }

  /* (non-Javadoc)
   * @see javax.servlet.jsp.tagext.Tag#release()
   */
  public void release() {
    super.release();
    _valueSet = null;
    _categoryDomain = null;
    _includeScriptElement = null;
  }

}
