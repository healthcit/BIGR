package com.ardais.bigr.web.taglib;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.tagext.BodyTagSupport;

import org.apache.struts.util.ResponseUtils;

import com.gulfstreambio.gboss.GbossFactory;

/**
 * Tag handler for the javascriptSpecialConcept tag, which creates a "special" Javascript 
 * BigrConcept that can be retrieved by a key.  This allows Javascript code to get the concept
 * via a key, allowing logic to be performed based on that concept.  Users should not hardcode
 * the concept CUI as input to this tag, but should instead use a Java constant to specify the
 * CUI.  This will enforce the CUI only being hardcoded once in the system - in a Java constant.  
 * <p> 
 * The page that uses this tag must include conceptGraph.js.  
 */
public class JavascriptSpecialConceptTag extends BodyTagSupport {

  private String _key;
  private String _cui;
  private String _includeScriptElement;

  /**
   * 
   */
  public JavascriptSpecialConceptTag() {
    super();
  }

  private String getKey() {
    return _key;
  }

  /**
   * Sets the key under which this special concept will be made available.  Each key specified in
   * a call to this tag within the same page must be unique.
   * 
   * @param  key  the key
   */
  public void setKey(String key) {
    _key = key;
  }

  private String getCui() {
    return _cui;
  }

  /**
   * Sets the CUI of the special conept.  By convention, this CUI should not be hardcoded, but
   * should instead be specified by a Java constant defined for the CUI, thus ensuring only one
   * place within the entire system that hardcodes the CUI.
   * 
   * @param  CUI  the CUI
   */
  public void setCui(String cui) {
    _cui = cui;
  }

  private String getIncludeScriptElement() {
    return _includeScriptElement;
  }

  /**
   * Sets whether the start and end &lt;script&gt; tags should be included around the Javascript
   * generated by this tag. 
   * 
   * @param  include  "true" if the start and end &lt;script&gt; tags should be included;
   *                  "false" otherwise.  The default is "false", which means that this tag
   *                  must be used inside a &lt;script&gt; element within the JSP.
   */
  public void setIncludeScriptElement(String include) {
    _includeScriptElement = include;
  }

  /* (non-Javadoc)
   * @see javax.servlet.jsp.tagext.Tag#release()
   */
  public void release() {
    super.release();
    _key = null;
    _cui = null;
    _includeScriptElement = null;
  }

  /**
   * Generates the Javascript calls for creating the Javascript to cache the special concept
   * under they key.
   */
  public int doEndTag() throws JspException {
    // Start the Javascript, including the script tag if necessary.     
    StringBuffer buf = new StringBuffer(1024);
    boolean includeScript = "true".equalsIgnoreCase(getIncludeScriptElement());

    if (includeScript) {
      buf.append("<script language=\"JavaScript\">");
    }

    // Create the Javascript to add the special concept, creating the concept to be passed to
    // the Javascript method call. 
    String cui = getCui();
    String desc = GbossFactory.getInstance().getDescription(cui);
    buf.append("bigrConceptsCache.SINGLETON.addSpecialConcept('");
    buf.append(getKey());
    buf.append("', new BigrConcept('");
    buf.append(cui);
    buf.append("', '");
    buf.append(desc);
    buf.append("'));");

    // End the script tag if necessary.     
    if (includeScript) {
      buf.append("</script>");
    }

    // Write the radio input tags to the response.
    ResponseUtils.write(pageContext, buf.toString());

    return EVAL_PAGE;
  }
}
